{ "easy" : [
    {"problem_name": "Autori", "url":"https://open.kattis.com/problems/autori?tab=metadata", "difficulty": "1.2 Easy", "description": "Great scientific discoveries are often named by the last names of scientists that made them. For example, the most popular asymmetric cryptography system, RSA was discovered by Rivest, Shamir and Adleman. Another notable example is the Knuth-Morris-Pratt algorithm, named by Knuth, Morris and Pratt.\nScientific papers reference earlier works a lot and it’s not uncommon for one document to use two different naming conventions: the short variation (e.g. KMP) using only the first letters of authors last names and the long variation (e.g. Knuth-Morris-Pratt) using complete last names separated by hyphens.\nWe find mixing two conventions in one paper to be aesthetically unpleasing and would like you to write a program that will transform long variations into short. \n ---INPUT--- \n The first and only line of input will contain at most 100 characters, uppercase and lowercase letters of the English alphabet and hyphen (‘-’ ASCII 45). The first character will always be an uppercase letter. Hyphens will always be followed by an uppercase letter. All other characters will be lowercase letters.\n ---OUTPUT--- \nThe first and only line of output should contain the appropriate short variation.\n ---Examples--- \n\n Sample Input 1: \nKnuth-Morris-Pratt\n Sample Output 1: \nKMP\n\n Sample Input 2: \nMirko-Slavko\n\n Sample Output 2: \nMS\n\n Sample Input 3: \nPasko-Patak\n\n Sample Output 3: \nPP" },
    {"problem_name": "Knight Packing", "url": "https://open.kattis.com/problems/knightpacking?tab=metadata" ,"difficulty": "1.2 Easy", "description": "On a N x N  chess board, two players alternate placing a knight on the board. A knight can only be placed if there is no other knight which would be either 1 row and 2 columns or 2 rows and 1 column away from it. The first player who cannot place a knight on the board loses.\nGiven the size of the board, compute if the first or second player wins.\n ---INPUT--- \n The first and only line contains the integer N (1 <= N <= 1000), the size of the board. \n ---OUTPUT--- \n Output first if the first player wins the game, or second if the second player wins the game. \n ---Examples--- \n \n Sample Input 1: \n1 \n\n Sample Output 1: \nfirst\n\n Sample Input 2: \n2\n\n Sample Output 2: \nsecond\n\n Sample Input 3: \n3\n\n Sample Output 3: \nfirst" },
    {"problem_name": "Two-sum", "url": "https://open.kattis.com/problems/twosum?tab=metadata" ,"difficulty": "1.3 Easy", "description": "Per-Magnus is trying to add two integers, but he never learned how to.\nWrite a program to help him with this most difficult task!\n ---INPUT--- \n The input consists of a single line with two integers 0 <= a <= 1000 and 0 <= b <= 1000. \n ---OUTPUT--- \nOutput a single integer, the sum a+b.\n ---Examples--- \n\n Sample Input 1: \n1 1\n\n Sample Output 1: \n2\n\n Sample Input 2: \n2 2\n\n Sample Output 2: \n4" },
    {"problem_name": "Oddities","url":"https://open.kattis.com/problems/oddities" , "difficulty": "1.3 Easy", "description": "Some numbers are just, well, odd. For example, the number is odd, because it is not a multiple of two. Numbers that are a multiple of two are not odd, they are even. More precisely, if a number n can be expressed as n = 2 * k for some integer k, then n is even. For example, 6 = 2 * 3 is even. \n Some people get confused about whether numbers are odd or even. To see a common example, do an internet search for the query “is zero even or odd?” (Don’t search for this now! You have a problem to solve!) \n Write a program to help these confused people.\n ---INPUT--- \n Input begins with an integer 1 <= n <= 20 on a line by itself, indicating the number of test cases that follow. Each of the following lines contain a test case consisting of a single integer  -10 <= x <= 10. \n ---OUTPUT--- \n For each x, print either 'x is odd' or 'x is even' depending on whether x is odd or even. \n ---Examples--- \n  Sample Input 1: \n 3 \n 10 \n 9 \n -5 \n\n Sample Output 1: \n 10 is even \n 9 is odd \n -5 is odd " },
    {"problem_name": "Grass Seed Inc.", "url":"https://open.kattis.com/problems/grassseed", "difficulty": "1.4 Easy", "description": "Many years ago after another unfruitful day in Cubicle Land, banging her head against yet another cutting edge, marketing buzzword-filled JavaScript framework, Janice the engineer looked out of the window and decided that time was ripe for a change. \n So swapping her keyboard and mouse for a fork and a spade, she started her own gardening company. \n After years of hard outdoor work Janice now has biceps like Van Damme and owns the premiere landscaping company in the whole of the South West, and has just been lucky enough to broker a large contract to sow lawns for landed gentry. \n Each contract details the size of the lawns that need to be seeded, and the cost of seed per square metre. How much do you need to spend on seed? \n ---INPUT--- \n - One line containing a real number C (0 < C <= 100), the cost of seed to sow one square metre of lawn.\n - One line containing an integer L (0 < L <= 100),the number of lawns to sow.\n - L lines, each containing two positive real numbers: w_i (0 <= w_i <= 100), the width of the lawn, and l_i (0 <= l_i <= 100), the length of the lawn.\nAll real numbers are given with at most decimals after the decimal point.\n ---OUTPUT--- \n - One line containing a real number: the cost to sow all of the lawns. \n All output must be accurate to an absolute or relative error of at most 10^-6. \n ---Examples--- \n Sample Input 1: \n 2 \n 3 \n 2 3 \n 4 5 \n 5 6 \n\n Sample Output 1: \n 112.0000000 \n\n Sample Input 2: \n 0.75 \n 2 \n 2 3.333 \n 3.41 4.567 \n\n Sample Output 2: \n 16.6796025" },
    {"problem_name": "Decimal deletion", "url":"https://open.kattis.com/problems/decimaldeletion?tab=metadata", "difficulty": "1.4 Easy", "description": "After solving one too many optimisation problems, Joshua has developed a phobia for floating point numbers. Help him out by rounding some floating point numbers into normal, safe integers. \n ---INPUT--- \n The first and only line of input will be a decimal number 0 <= N <= 10000.\n ---OUTPUT--- \nPrint the integer closest to the given input. If the given input is exactly between two integers, any of them will be accepted. \n ---Examples--- \n\n Sample Input 1: \n3.14\n Sample Output 1: \n3\n Sample Input 2: \n2.71\n Sample Output 2: \n3\n Sample Input 3: \n2.5\n Sample Output 3: \n3\n Sample Input 4: \n42\n Sample Output 4: \n42" },
    {"problem_name": "Cold-puter Science", "url": "https://open.kattis.com/problems/cold?tab=metadata" ,"difficulty": "1.4 Easy", "description": "We’re not going to sugar-coat it: Chicago’s winters can be rough. The temperatures sometimes dip to uncomfortable levels and, after last year’s “polar vortex”, the University of Chicago Weather Service wants to find out exactly how bad the winter was. More specifically, they are interested in knowing the total number of days in which the temperature was below zero degrees Celsius. \n ---INPUT--- \n The input is composed of two lines. The first line contains a single positive integer n (1 <= n <= 100) that specifies the number of temperatures collected by the University of Chicago Weather Service. The second line contains n temperatures, each separated by a single space. Each temperature is represented by an integer t (-1000000 <= t <= 1000000).\n ---OUTPUT--- \nYou must print a single integer: the number of temperatures strictly less than zero.\n ---Examples--- \n\n Sample Input 1: \n3\n5 -10 15\n\n Sample Output 1: \n1\n\n Sample Input 2: \n5\n-14 -5 -39 -5 -7\n\n Sample Output 2: \n5"},
    {"problem_name": "Greetings!", "url": "https://open.kattis.com/problems/greetings2?tab=metadata" ,"difficulty": "1.4 Easy", "description": "Now that Snapchat and Slingshot are soooo 2018, the teenagers of the world have all switched to the new hot app called BAPC (Bidirectional and Private Communication). This app has some stricter social rules than previous iterations. For example, if someone says goodbye using Later!, the other person is expected to reply with Alligator!. You can not keep track of all these social conventions and decide to automate any necessary responses, starting with the most important one: the greetings. When your conversational partner opens with he…ey, you have to respond with hee…eey as well, but using twice as many e’s!\nGiven a string of the form he…ey of length at most 1000 , print the greeting you will respond with, containing twice as many e’s. \n ---INPUT--- \n The input consists of one line containing a single string s as specified, of length at least 3 and at most 1000. \n ---OUTPUT--- \n Output the required response.\n ---Examples--- \n\n Sample Input 1: \nhey\n\n Sample Output 1: \nheey\n\n Sample Input 2: \nheeeeey\n\n Sample Output 2: \nheeeeeeeeeey"},
    {"problem_name": "Aaah!", "url": "https://open.kattis.com/problems/aaah?tab=metadata" ,"difficulty": "1.5 Easy", "description": "Jon Marius shouted too much at the recent Justin Bieber concert, and now needs to go to the doctor because of his sore throat. The doctor’s instructions are to say “aaah”. Unfortunately, the doctors sometimes need Jon Marius to say “aaah” for a while, which Jon Marius has never been good at. Each doctor requires a certain level of “aah” – some require “aaaaaah”, while others can actually diagnose his throat with just an “h”. (They often diagnose wrongly, but that is beyond the scope of this problem.) Since Jon Marius does not want to go to a doctor and have his time wasted, he wants to compare how long he manages to hold the “aaah” with the doctor’s requirements. (After all, who wants to be all like “aaah” when the doctor wants you to go “aaaaaah”?)\nEach day Jon Marius calls up a different doctor and asks them how long his “aaah” has to be. Find out if Jon Marius would waste his time going to the given doctor. \n ---INPUT--- \n The input consists of two lines. The first line is the “aaah” Jon Marius is able to say that day. The second line is the “aah” the doctor wants to hear. Only lowercase ’a’ and ’h’ will be used in the input, and each line will contain between 0 and 999  ’a’s, inclusive, followed by a single ’h’.\n ---OUTPUT--- \n Output “go” if Jon Marius can go to that doctor, and output “no” otherwise.\n ---Examples--- \n\n Sample Input 1: \naaah\naaaaah\n\n Sample Output 1: \nno\n\n Sample Input 2: \naaah\nah\n\n Sample Output 2: \ngo"},
    {"problem_name": "GCD", "url": "https://open.kattis.com/problems/gcd?tab=metadata" ,"difficulty": "1.5 Easy", "description": "Given two integers A and B, compute their greatest common divisor.\n ---INPUT--- \n The first and only line contains the integers A and B (1 <= A, B <= 10^9).\n ---OUTPUT--- \nOutput a single integer – the greatest common divisor of A and B.\n ---Examples--- \n\n Sample Input 1: \n5 7\n\n Sample Output 1: \n1\n Sample Input 2: \n10 15\n\n Sample Output 2: \n5" },
    {"problem_name": "Symmetric Order", "url":"https://open.kattis.com/problems/symmetricorder?tab=metadata", "difficulty": "1.6 Easy", "description": "In your job at Albatross Circus Management (yes, it’s run by a bunch of clowns), you have just finished writing a program whose output is a list of names in nondescending order by length (so that each name is at least as long as the one preceding it). However, your boss does not like the way the output looks, and instead wants the output to appear more symmetric, with the shorter strings at the top and bottom and the longer strings in the middle. His rule is that each pair of names belongs on opposite ends of the list, and the first name in the pair is always in the top part of the list. In the first example set below, Bo and Pat are the first pair, Jean and Kevin the second pair, etc. \n ---INPUT--- \n The input consists of one or more sets of strings, followed by a final line containing only the value 0. Each set starts with a line containing an integer, n, which is the number of strings in the set, followed by n strings, one per line, sorted in nondescending order by length. None of the strings contain spaces. There is at least one and no more than 15 strings per set. Each string is at most 25 characters long. \n ---OUTPUT--- \n  For each input set print “SET n” on a line, where n starts at 1, followed by the output set as shown in the sample output.  \n ---Examples--- \n Sample Input 1: \n 7\n Bo\n Pat\n Jean\n Kevin\n Claude\n William\n Marybeth\n 6\n Jim\n Ben\n Zoe\n Joey\n Frederick\n Annabelle\n 5\n John\n Bill\n Fran\n Stan\n Cece\n 0\n\n Sample Output 1: \n SET 1 \n Bo\n Jean\n Claude\n Marybeth\n William\n Kevin\n Pat\n SET 2\n Jim\n Zoe\n Frederick\n Annabelle\n Joey\n Ben\n SET 3\n John\n Fran\n Cece\n Stan\n Bill"},
    {"problem_name": "Secure Doors", "url": "https://open.kattis.com/problems/securedoors?tab=metadata", "difficulty": "1.7 Easy", "description": "You need to write a simple software auditor for tracking employees entering and exiting your building using their access cards (each card uniquely identifies the employee holding the card). Your software needs to look at the access log and determine if there are any anomalies. There are two types of anomalies your software should detect: \n -a user entering the building when, according to the log, they are already supposed to be in the building \n - a user exiting the building when, according to the log, they are not supposed to be in the building \n When your software sees someone enter a building (even if it’s an anomaly), that person is assumed to be inside the building from that point on, until he exits. Similarly, if your software sees someone exit the building (even if it’s an anomaly), that person is assumed to not be in the building from that point on, until he enters again. At the beginning of the log, everyone is assumed to be outside the building. \n---INPUT--- \n Input starts with a number 1 <= n <= 1000  indicating the length of the log. This is followed by n lines, each line describing either an entry or exit by an employee. Each description is of the form ‘entry name’ or ‘exit name’, where name is a string of up to 20 uppercase and/or lowercase characters (a-z).\n ---OUTPUT--- \n For each person’s entry or exit, print the name of the person, followed by entered or exited. If the action is anomalous, print (ANOMALY) afterward.\n ---Examples--- \n Sample Input 1: \n 8\n entry Abbey\n entry Abbey\n exit Abbey\n entry Tyrone\n exit Mason\n entry Demetra\n exit Latonya\n entry Idella \n\n Sample Output 1: \n Abbey entered\nAbbey entered (ANOMALY)\nAbbey exited\nTyrone entered\nMason exited (ANOMALY)\nDemetra entered\nLatonya exited (ANOMALY)\nIdella entered"},
    {"problem_name": "Code to Save Lives", "url": "https://open.kattis.com/problems/codetosavelives?tab=metadata" ,"difficulty": "1.7 Easy", "description": "Daenerys and her fellow friends decided to go on a magical adventure to find the mystical scientist to cure her village of disease. On her adventure she faces the winter and desert until she finally found the genius scientist, and while Daenerys explained her dire situation to the scientist, the scientist agreed to save her village under one condition.\nShe must prove her village is worthy of saving by solving the following problem: given that numbers are observing numerical distancing, which means they each need a space in between each digit, provide the sum of two numerically distanced numbers. For example, the numerically distanced numbers 3 4 5 and 5 6 7 sum to 9 1 2.\n ---INPUT--- \n The input consists of 3 different segments:\n 1. The first line will have the number of test cases t, where 1 <= t <= 10.\n 2. The first line of each case will contain the first positive numerically distanced whole number, which will have the number’s digits, 0 - 9 , be space-separated. The amount of digits in this line is m, where 1 <= m <= 9.\n 3. The second line of each case will contain the second positive numerically distanced whole number, which will have the number’s digits, 0 - 9, be space-separated. The amount of digits in the line is n, where 1 <= n <= 9.\n ---OUTPUT--- \nOutput the sum of the numerically distanced numbers for each of the test cases on one line each.\n ---Examples--- \n\n Sample Input 1: \n2\n3 4 5\n5 6 7\n6 1\n3 2 5\n\n Sample Output 1: \n9 1 2\n3 8 6\n\n Sample Input 2: \n1\n1 4 8 0 5\n4 3 8 4\n\n Sample Output 2: \n1 9 1 8 9\n\n Sample Input 3: \n3\n4\n4 5\n7 6\n6 2 7\n8 2 0\n2 3\n\n Sample Output 3: \n4 9\n7 0 3\n8 4 3" },
    {"problem_name": "Half a Cookie","url":"https://open.kattis.com/problems/halfacookie?tab=metadata" ,"difficulty": "1.8 Easy", "description": "You and your sister have to share a large, circular cookie. The cookie is quite stale, so you must break it by striking it with a hammer. When struck at point p, the cookie will break along the shortest chord containing p. You follow the usual strategy of one person breaking the cookie into two parts and the other person choosing which part to take. Thus, after the cookie is broken, you want to know which part is larger. \n ---INPUT--- \n Input consists of up to 200 test cases, one per line. Each test case is given as three real numbers r x y,  where each value is in the range [0,20] with at most 8 digits past the decimal point. All units are given in centimeters. The r  value gives the radius of an origin-centered cookie. The x and y values give the coordinates where the cookie is struck. No strike will be within 0.001 cm  of the edge of the cookie. Input ends at end of file. \n ---OUTPUT--- \n For each test case, print a line giving the area of the resulting two cookie pieces, larger piece first. Answers should be correct to within 0.001  square centimeters. If the hammer misses the cookie entirely, simply print out the word “miss”. \n ---Examples--- \n\n Sample Input 1: \n 10.0 5.0 0\n5.5 5.0 5.0\n8.0 3.0 4.5 \n\n Sample Output 1: \n 252.740780 61.418485\nmiss\n179.924668 21.137262"},
    {"problem_name": "Just a Minute", "url":"https://open.kattis.com/problems/justaminute", "difficulty": "1.9 Easy", "description": "The city’s local subway service S.L., Super Lag, are currently being blamed that their displays, showing the expected wait time until the next train arrives, are faulty. Too many commuters have the experience of coming to the subway station, and then having to wait many more minutes than the display showed when they got there.\nThe American Commuter Movement and the International Commuting Peoples’ Community have had it with this. Especially Johan, a young student, who has decided to investigate this matter further. Johan went to one of the stations, and studied the behaviour of the displays. Each time the display showed a new number, Johan carefully measured the number of seconds that passed from that moment until the train arrived. As soon as that train left again, he did the same thing for the next train and so on. He remembered all the displayed minutes, and the wait time for each such in seconds. Although Johan has a very good memory, he does not know what to do with his measurements. He needs your help!\nYour task is to help Johan calculate the average length of an S.L. minute (the length of a minute according to the display). You may assume that when the display shows a new number M, the expected S.L. wait time in that moment is exactly M minutes. \n ---INPUT--- \n The first line contains an integer 1 <= N <= 1000 – the number of observations Johan did. The following N  lines contain two positive integers M <= 60 and S <= 3600 – the number of minutes displayed, and the number of seconds Johan had to wait for his train. \n ---OUTPUT--- \n Output should consist of a single real number: the average length of an S.L. minute, measured in real minutes. A relative or absolute error of at most 10^-7 will be considered correct. If the average length of an S.L. minute is shorter than or equal to a normal minute, print the message 'measurement error' instead. \n ---Examples--- \n\n Sample Input 1: \n 1\n1 61 \n\n Sample Output 1: \n 1.016666667 \n\n Sample Input 2: \n 3\n5 560\n10 600\n2 264 \n\n Sample Output 2: \n 1.396078431"},
    {"problem_name": "Bacon, Eggs, and Spam","url":"https://open.kattis.com/problems/baconeggsandspam?tab=metadata" , "difficulty": "2.0 Easy", "description": "You are a short-order cook in a local diner. Each day, a series of customers enter your diner and order a list of items from the menu. You not only prepare their orders, but you also make a list of who ordered what. At the end of the day, you like to reflect back on who ordered the various items on your menu. This will help you to make decisions about what you should feature on your menu, how you should price it, and what items you may be able to drop from the menu. Develop a program to generate a report of the day’s orders. \n ---INPUT--- \n Input consists of descriptions of up to 100 days’ worth of diner orders. The description of each day starts with a line containing an integer, 1 <= n <= 20, giving the number of customers who visit the diner. This is followed by n lines, each starting with the name of an individual. The remainder of the line is a non-empty, space-separated list of up to 10 unique menu items ordered by the individual. Each individual’s name is unique and appears at most once on a given day. Each name has at most 15 characters (all A–Z) beginning with an uppercase letter (lowercase characters may follow). All menu items have up to 15 characters using only a–z (lowercase) and ‘-’ (dash). Input terminates with a value of zero for n. \n ---OUTPUT--- \n For each day, print out a report of who ordered each menu item, one line per menu item. The line should give the name of the menu item, followed by a space-separated list of all the people who ordered it. The list of menu items for a given day should be sorted lexicographically, and the list of names reported for an item should also be sorted lexicographically. Print a blank line after the report for each day. \n ---Examples--- \n\n Sample Input 1: \n 3\n Alice bacon eggs spam\n Sue pancakes sausage ham\n David eggs spam\n 1\n Bill diet-coke\n 0 \n \n Sample Output 1: \n bacon Alice \neggs Alice David\nham Sue\npancakes Sue\nsausage Sue\nspam Alice David\n\ndiet-coke Bill\n"},
    {"problem_name": "Quite a Problem", "url": "https://open.kattis.com/problems/quiteaproblem?tab=metadata" ,"difficulty": "2.1 Easy", "description": "It gets tiring, looking for all ways in which the word ‘problem’ can be used (and mis-used) in the news media. And yet, that’s been your job for several years: looking through news stories for that word. Wouldn’t it be better if you could automate the process? \n ---INPUT--- \n Each line of input is one test case. Lines are at most 80 characters long. There are at most 1000 lines of input. Input ends at end of file.  \n ---OUTPUT--- \n For each line of input, print yes if the line contains ‘problem’, and no otherwise. Any capitalization of ‘problem’ counts as an occurrence. \n ---Examples--- \n\n Sample Input 1: \n Problematic pair programming\n 'There's a joke that pairs, like fish and house guests, go\n rotten after three days,' said Zach Brock, an engineering\n manager.  Working out problems with a pairing partner can be\n a lot like working out problems with a significant other.\n During one recent rough patch, Jamie Kite, a developer, sat\n her partner down for a talk. 'Hey, it feels like we're\n driving in different directions,' she recalls saying. 'It's\n like any relationship,' Ms.  Kite said. 'If you don't talk\n about the problems, it's not going to work.' When those\n timeouts don't solve the problem, partners can turn to\n on-staff coaches who can help with counseling.  'People who\n have been pairing a while, they'll start acting like old\n married couples,' said Marc Phillips, one of the coaches.\n People can be as much of a challenge as writing software.\n (Excerpted from 'Computer Programmers Learn Tough Lesson in\n Sharing'; Wall Street Journal, August 27, 2012) \n \n Sample Output 1: \n yes\nno\nno\nyes\nyes\nno\nno\nno\nno\nyes\nyes\nno\nno\nno\nno\nno\nno"},
    {"problem_name": "Card Trick", "url": "https://open.kattis.com/problems/cardtrick2?tab=metadata" ,"difficulty": "2.1 Easy", "description": "The magician shuffles a small pack of cards, holds it face down and performs the following procedure:\n1.The top card is moved to the bottom of the pack. The new top card is dealt face up onto the table. It is the Ace of Spades.\n2.Two cards are moved one at a time from the top to the bottom. The next card is dealt face up onto the table. It is the Two of Spades.\n3.Three cards are moved one at a time . . .\n4. This goes on until the n:th and last card turns out to be the n of Spades. \nThis impressive trick works if the magician knows how to arrange the cards beforehand (and knows how to give a false shuffle). Your program has to determine the initial order of the cards for a given number of cards.\n ---INPUT--- \n On the first line of the input is a single positive integer T <= 13 the number of test cases to follow. Each case consists of one line containing the integer n (1 <= n <= 13).\n ---OUTPUT--- \nFor each test case, output a line with the correct permutation of the values 1 to n, space separated. The first number showing the top card of the pack, etc…\n ---Examples--- \n\n Sample Input 1: \n2\n4\n5\n\n Sample Output 1: \n2 1 4 3\n3 1 4 5 2"},
    {"problem_name": "Touchscreen Keyboard", "url": "https://open.kattis.com/problems/touchscreenkeyboard?tab=metadata" ,"difficulty": "2.2 Easy", "description": "Nowadays, people do not use hardware keyboards but touchscreens. Usually, they touch on the wrong letters with their chunky fingers, because screen space is precious and the letters therefore too small.\nUsually, a spell checker runs after typing a word and suggests other words to select the correct spelling from. Your job is to order that list so that more likely words are on top.\nThe typical touchscreen keyboard looks like this:\nqwertyuiop\nasdfghjkl\nzxcvbnm\n\nYou should use the distance between the letters to type a word: the distance is the sum of the horizontal and vertical distance between the typed and proposed letter. Assume you typed a w, the distance to e is 1 , while the distance to z is 3. \n The typed word and the list of words from the spell checker all have the same length. The distance between two words is the sum of the letter distances. So the distance between ifpv and icpc is 3. \n ---INPUT--- \n The first line of the input specifies the number of test cases t (0 < t < 20). Each test case starts with a string and an integer l on one line. The string gives the word that was typed using the touchscreen keyboard, while l pecifies the number of entries in the spell checker list (0 <= l <= 10). Then follow l lines , each with one word of the spell checker list. You may safely assume that all words of one test case have the same length and no word is longer than 10000 characters (only lowercase ’a’ - ’z’). Furthermore, each word appears exactly once in the spell checker list on one test case. \n ---OUTPUT--- \n For each test case, print the list of words sorted by their distance ascending. If two words have the same distance, sort them alphabetically. Print the distance of each word in the same line. \n ---Examples--- \n\n Sample Input 1: \n2\nifpv 3\niopc\nicpc\ngcpc\nedc 5\nwsx\nedc\nrfv\nplm\nqed\n\n Sample Output 1: \nicpc 3\ngcpc 7\niopc 7\nedc 0\nrfv 3\nwsx 3\nqed 4\nplm 17" },
    {"problem_name": "Doorman", "url": "https://open.kattis.com/problems/doorman?tab=metadata" ,"difficulty": "2.3 Easy", "description": "The doorman Bruno at the popular night club Heaven is having a hard time fulfilling his duties. He was told by the owner that when the club is full, the number of women and men let into the club should be roughly the same. When the night club opens, people wanting to enter the club are already lined up in a queue, and Bruno can only let them in one-by-one. He lets them in more-or-less in the order they are lined up. He can however decide to let the second person in the queue cut the line and slip into the club before the person in front. This will no doubt upset the person first in line, especially when this happens multiple times, but Bruno is quite a big guy and is capable of handling troublemakers. \n Unfortunately though, he is not that strong on mental calculations under these circumstances. He finds keeping track of the difference of the number of women and number of men let into the club a challenging task. As soon as the absolute difference gets too big, he loses track of his counting and must declare to the party people remaining in the queue that the club is full.  \n ---INPUT--- \n  The first line of input contains a positive integer X < 100 describing the largest absolute difference between the number of women and number of men let into the club that Bruno can handle.\n The second line contains a string consisting solely of the characters ’W’ and ’M’ of length at most 100 , describing the genders of the people in the queue, in order of their arrrival. The leftmost character of the string is the gender of the person first in line.\n You may assume that the club is large enough to hold all the people in the queue. \n ---OUTPUT--- \nThe maximum number of people Bruno can let into the club without losing track of his counting. \n ---Examples--- \n\n Sample Input 1: \n1\nMWWMWMMWM\n\n Sample Output 1: \n9\n\n Sample Input 2: \n2\nWMMMMWWMMMWWMW\n\n Sample Output 2: \n8" },
    {"problem_name": "Above Average", "url": "https://open.kattis.com/problems/aboveaverage?tab=metadata" ,"difficulty": "2.3 Easy", "description": " It is said that 90 % of frosh expect to be above average in their class. You are to provide a reality check. \n ---INPUT--- \n The first line of standard input contains an integer 1 <= C <= 50, the number of test cases. C data sets follow. Each data set begins with an integer, N,  the number of people in the class (1 <= N <= 1000). N integers follow, separated by spaces or newlines, each giving the final grade (an integer between 0 and 100) of a student in the class. \n ---OUTPUT--- \nFor each case you are to output a line giving the percentage of students whose grade is above average, rounded to exactly 3 decimal places. \n ---Examples--- \n\n Sample Input 1: \n5\n5 50 50 70 80 100\n7 100 95 90 80 70 60 50\n3 70 90 80\n3 70 90 81\n9 100 99 98 97 96 95 94 93 91\n\n Sample Output 1: \n40.000%\n57.143%\n33.333%\n66.667%\n55.556%" },
    {"problem_name": "Bishops", "url": "https://open.kattis.com/problems/bishops" ,"difficulty": "2.4 Easy", "description": "Yesterday was Sam’s birthday. The most interesting gift was definitely the chessboard. Sam quickly learned the rules of chess and defeated his father, all his friends, his little sister, and now no one wants to play with him any more.\nSo he decided to play with another birthday gift – a Book of Math Problems for Young Mathematicians. He opened the book somewhere in the middle and read the following problem: 'How many knights can be placed on a chessboard without threatening each other?' After a while he realized that this was trivial and moved on to the next problem: 'How many bishops can be placed on a chessboard without threatening each other?'. Sam is in trouble here. He is not able to solve this problem and needs your help.\n \n ---TASK--- \n Sam’s chessboard has size N x N . A bishop can move to any distance in any of the four diagonal directions. A bishop threatens another bishop if it can move to the other bishop’s position. Your task is to compute the maximum number of bishops that can be placed on a chessboard in such a way that no two bishops threaten each other. \n ---INPUT--- \n The input file consists of several lines. The line number i contains a positive integer representing the size of the i-th chessboard. The size of each chessboard is at most 1000000. \n ---OUTPUT--- \n The output file should contain the same number of lines as the input file. The i-th line should contain one number – the maximum number of bishops that can be placed on i-th -th chessboard without threatening each other. \n ---Examples--- \n\n Sample Input 1: \n2\n3\n\n Sample Output 1: \n2\n4"},
    {"problem_name": "Simon Says", "url": "https://open.kattis.com/problems/simon?tab=metadata" ,"difficulty": "2.4 Easy", "description": "Simon says is a game where one player is Simon, and the rest have to do what he says, but only if he starts his command with the words “simon says”. If you fail to perform the command, you lose. If you perform the command when he didn’t start with those magic words, you also lose. You’ve been playing for a while, and it’s getting a bit tedious, because it’s so easy. Write a program that helps you decide what to do based on the command from Simon.\n ---INPUT--- \n The first line of the input consists of a single integer, T, the number of test cases. Each test case consists of a single line of text – Simon’s command. \n1. 1 <= T <= 20 \n2. Each line consists of only the letters a-z and spaces \n 3. Each word will be separated by exactly one space. \n 4. Lines will not have leading or trailing spaces. \n 5. Each line will have between 1 and 1000 characters.\n ---OUTPUT--- \nFor each test case, repeat the command if the first two words were “simon says”. Do not repeat the initial “simon says”. Otherwise output a blank line.\n ---Examples--- \n\n Sample Input 1: \n4\nsimon says write a program\nprint some output\nsimon whispers do not stress\nsimon says get balloons\n\n Sample Output 1: \nwrite a program\n\n\nget balloons" },
    {"problem_name": "Three Powers", "url": "https://open.kattis.com/problems/threepowers?tab=metadata" ,"difficulty": "2.4 Easy", "description": "Consider the set of all non-negative integer powers of 3.\n S = {1,3,9,27,81,...}\n Consider the sequence of all subsets of S ordered by the value of the sum of their elements. The question is simple: find the set at the n-th position in the sequence and print it in increasing order of its elements.\n ---INPUT--- \n Each line of input contains a number n, which is a positive integer with no more than 19 digits. The last line of input contains 0 and it should not be processed. There are at most 100 test cases.\n ---OUTPUT--- \n For each line of input, output a single line displaying the n-th set as described above, in the format used in the sample output.\n ---Examples--- \n\n Sample Input 1: \n1\n7\n14\n783\n1125900981634049\n0\n\n Sample Output 1: \n{ }\n{ 3, 9 }\n{ 1, 9, 27 }\n{ 3, 9, 27, 6561, 19683 }\n{ 59049, 3486784401, 205891132094649, 717897987691852588770249 }" },
    {"problem_name": "Disc District", "url": "https://open.kattis.com/problems/discdistrict?tab=metadata", "difficulty": "2.4 Easy", "description":"You live in the Disc District of Flatland and work for the Nearest Convenient Plot Company (NCPC). Your job is to find the nearest convenient plot of land outside of the Disc District to build on.\nThe Disc District can be described as a disc on a plane with center (0,0) and some radius r. So a point is outside of the Disc District if the (Euclidean) distance from it to the origin is strictly larger than r. A point (x,y) on the plane is a convenient plot if x and y are integers.\n ---INPUT--- \n The only line of the input contains a single integer r (1 <= r <= 10^6)\n ---OUTPUT--- \n The output should contain a single line with two integers, the x and y coordinates of a convenient building location that is closest to the Disc District. If there are more than one answer, output any of them.\n ---Examples--- \n\n Sample Input 1: \n1\n Sample Output 1: \n1 1\n Sample Input 2: \n8\n Sample Output 2: \n4 7\n Sample Input 3: \n90210\n Sample Output 3: \n69551 57450"},
    {"problem_name": "Laptop Stickers", "url": "https://open.kattis.com/problems/laptopstickers" ,"difficulty": "2.5 Easy", "description": "One of Atrebla’s favourite pastimes is collecting stickers from all the conferences he attends. Due to a series of unfortunate events, all of the usual ones have been cancelled, so this year he has finally decided to start putting them onto his laptop.\nAtrebla has laid out all of his stickers, decided where he would like to place them and in what order they should be placed. Before he starts sticking, he would like to make one final check to make sure he will be satisfied with the final result.\nThe surface of his laptop lid can be represented by a grid with H rows and L columns. Each character in the grid is either a ’_’, or a lowercase letter denoting a sticker. The first sticker is denoted with ’a’s, the second with ’b’s, and so on. When placed, a sticker will cover up everything beneath it. Any parts of a sticker that hangs off the laptop will be cut off.\nCan you write a program to give a preview of what Atrebla’s laptop will look like after placing all of his stickers? \n ---INPUT--- \n The first line contains three space separated integers 0 < L, H <= 50, the length and height of the laptop lid, and 0 <= K <= 26 the number of stickers to be placed.\nEach of the following K lines contains four space separated integers 0 < l <= L, the length of the sticker, 0 < h <=H, the height of the sticker, and 0 <= a < Land 0 <= b < H denoting the column and row of the top left corner of the sticker respectively. \n ---OUTPUT--- \nOutput the final state of the laptop lid after all the stickers have been placed. \n ---Examples--- \n\n Sample Input 1: \n6 3 3\n2 3 0 0\n2 1 2 2\n3 2 3 1\n\n Sample Output 1: \naa____\naa_ccc\naabccc" },
    {"problem_name": "Parent Gap", "url": "https://open.kattis.com/problems/parentgap?tab=metadata" ,"difficulty": "2.5 Easy", "description": "In North America, and in many countries around the world, Mother’s Day is celebrated on the second Sunday in May, and Father’s Day is celebrated on the third Sunday in June. The interval between Mother’s Day and Father’s Day in any particular year, sometimes referred to as the parent gap, is always either 5 weeks or 6 weeks. For example, in 2022 Mother’s Day was on May 8 and Father’s Day was on June 19 , a parent gap of 6  weeks, but in 2023  Mother’s Day will be on May 14 and Father’s Day will be on June 18, , a parent gap of only 5 weeks. Your task is to determine the parent gap for a given year. The following information may be helpful. In a year that is not a leap year, the months have the following number of days: January: 31, , February: 28, , March: 31, April: 30, May: 31, June: 30, July: 31, August: 31, September: 30, October: 31, November: 30, December: 31.  In a leap year, February has an extra day (February 29th), and the Leap Year Rule is as follow: a year that is divisible by 4 is a leap year, unless it is divisible by 100,  with the exception (to the exception) that a year that is divisible by 400 is a leap year. \n ---INPUT--- \n Input consists of a single year, y (2000 <= y <= 3000). \n ---OUTPUT--- \n  Output the parent gap for the input year, either “5 weeks” or “6 weeks”.\n ---Examples--- \n\n Sample Input 1: \n2022\n\n Sample Output 1: \n6 weeks\n\n Sample Input 2: \n2023\n\n Sample Output 2: \n5 weeks" },
    {"problem_name": "Judging Troubles", "url": "https://open.kattis.com/problems/judging" ,"difficulty": "2.6 Easy", "description": "The NWERC organisers have decided that they want to improve the automatic grading of the submissions for the contest, so they now use two systems: DOMjudge and Kattis. Each submission is judged by both systems and the grading results are compared to make sure that the systems agree. However, something went wrong in setting up the connection between the systems, and now the jury only knows all results of both systems, but not which result belongs to which submission! You are therefore asked to help them figure out how many results could have been consistent. \n ---INPUT--- \n The input consists of: \n - one line with one integer n ( 1 <= n <= 10^5),the number of submissions; \n - n lines, each with a result of the judging by DOMjudge, in arbitrary order; \n - n lines, each with a result of the judging by Kattis, in arbitrary order. \n Each result is a string of length between 5 and 15 characters (inclusive) consisting of lowercase letters. \n ---OUTPUT--- \nOutput one line with the maximum number of judging results that could have been the same for both systems.\n ---Examples--- \n\n Sample Input 1: \n5\ncorrect\nwronganswer\ncorrect\ncorrect\ntimelimit\nwronganswer\ncorrect\ntimelimit\ncorrect\ntimelimit\n\n Sample Output 1: \n4"},
    {"problem_name": "Alien Numbers", "url": "https://open.kattis.com/problems/aliennumbers" ,"difficulty": "2.6 Easy", "description": "The decimal numeral system is composed of ten digits, which we represent as \"0123456789\" (the digits in a system are written from lowest to highest). Imagine you have discovered an alien numeral system composed of some number of digits, which may or may not be the same as those used in decimal. For example, if the alien numeral system were represented as \"oF8\", then the numbers one through ten would be (F, 8, Fo, FF, F8, 8o, 8F, 88, Foo, FoF). We would like to be able to work with numbers in arbitrary alien systems. More generally, we want to be able to convert an arbitrary number that’s written in one alien system into a second alien system.\n ---INPUT--- \n The first line of input gives the number of cases, T <= 100. T test cases follow. Each case is a line formatted as \n alien_number source_language target_language \n Each language will be represented by a list of its digits, ordered from lowest to highest value. No digit will be repeated in any representation, all digits in the alien number will be present in the source language, and the first digit of the alien number will not be the lowest valued digit of the source language (in other words, the alien numbers have no leading zeroes). Each digit will either be a number 0-9, an uppercase or lowercase letter, or one of the following symbols !\"#$%&'()*+,-./:;<>?@[\\]^_`{|}~ \n You may assume that the number in decimal is positive and at most 1000000000. All languages will have at most 94 digits. \n ---OUTPUT--- \n For each test case, output one line containing \"Case #x: \" followed by the alien number translated from the source language to the target language. \n ---Examples--- \n\n Sample Input 1: \n4\n9 0123456789 oF8\nFoo oF8 0123456789\n13 0123456789abcdef 01\nCODE O!CDE? A?JM!.\n\n Sample Output 1: \nCase #1: Foo\nCase #2: 9\nCase #3: 10011\nCase #4: JAM!"},
    {"problem_name": "Best Compression Ever", "url": "https://open.kattis.com/problems/bestcompression" ,"difficulty": "2.6 Easy", "description": "Being educated in Computer Science and Mathematics is not always easy. Especially not if you have “friends” who repeatedly insist on showing you their new “proofs” that P equals NP, that the Riemann Hypothesis is true, and so on.\nOne of your friends recently claims to have found a fantastic new compression algorithm. As an example of its amazing performance, your friend has told you that every file in your precious collection of random bit strings after compression would be at most b bits long! Naturally, you find this a bit hard to believe, so you want to determine whether it is even theoretically possible for this to be true.\nYour collection of random bit strings consists of N files, no two of which are identical, and each of which is exactly 1000 bits long. \n ---INPUT--- \n The input consists of two integers N (1<=N<= 10^15) and b (0<=b<=50), giving the number of files in your collection and the maximum number of bits a compressed file is allowed to have. \n ---OUTPUT--- \n Output a line containing either “yes” if it is possible to compress all the N  files in your collection into files of size at most b bits, or “no” otherwise.\n ---Examples--- \n\n Sample Input 1: \n13 3\n\n Sample Output 1: \nyes\n\n Sample Input 2: \n1 0\n\n Sample Output 2: \nyes\n\n Sample Input 3: \n31415926535897 40\n\n Sample Output 3: \nno" },
    {"problem_name": "From A to B", "url": "https://open.kattis.com/problems/fromatob" ,"difficulty": "2.6 Easy", "description": "You are given two integers, a and b.You want to transform a to b by performing a sequence of operations. You can only perform the following operations:\n - Divide a by two (only if a is even) \n - Add one to a \n What is the minimum number of these operations you need to transform a into b? \n ---INPUT--- \n The single line of input contains two space-separated integers a and b ( 1 <= a, b <= 10^9).  You want to transform a into b using only the operations given above.\n ---OUTPUT--- \nOutput a single integer, which is the minimum number of the given operations needed to transform a into b. \n ---Examples--- \n\n Sample Input 1: \n103 27\n\n  Sample Output 1: \n4\n\n Sample Input 2: \n3 8\n\n Sample Output 2: \n5" },
    {"problem_name": "Election", "url": "https://open.kattis.com/problems/election2?tab=metadata" ,"difficulty": "2.6 Easy", "description": "Canada has a multi-party system of government. Each candidate is generally associated with a party, and the party whose candidates win the most ridings generally forms the government. Some candidates run as independents, meaning they are not associated with any party. Your job is to count the votes for a particular riding and to determine the party with which the winning candidate is associated. \n ---INPUT--- \n The first line of input contains a positive integer n satisfying 2 <= n <= 20, the number of candidates in the riding. n pairs of lines follow: the first line in each pair is the name of the candidate; the second line is the name of the party, or the word “independent” if the candidate has no party. No candidate name is repeated and no party name appears more than once in this part of the input.\n The next line contains a positive integer m <= 10000, and is followed by m lines each indicating the name of a candidate for which a ballot is cast. Any names not in the list of candidates should be ignored. \n Each name line consists of at least 1 and at most 80  characters, uses only ASCII characters 32 to 126  (inclusive), and does not contain any leading or trailing blanks.\n ---OUTPUT--- \nOutput consists of a single line containing one of: \n- The name of the party with whom the winning candidate is associated, if there is a winning candidate and that candidate is associated with a party.\n- The word “independent” if there is a winning candidate and that candidate is not associated with a party.\n- The word “tie” if there is no winner; that is, if no candidate receives more votes than every other candidate.\n ---Examples--- \n\n Sample Input 1: \n3\nMarilyn Manson\nRhinoceros\nJane Doe\nFamily Coalition\nJohn Smith\nindependent\n6\nJohn Smith\nMarilyn Manson\nMarilyn Manson\nJane Doe\nJohn Smith\nMarilyn Manson\n\n Sample Output 1: \nRhinoceros" },
    {"problem_name": "Beekeeper", "url": "https://open.kattis.com/problems/beekeeper" ,"difficulty": "2.7 Easy", "description": "It’s Bill the beekeeper again. In this problem, we learn that didn’t choose his career for the best reason. Bill chose to be a beekeeper because he really, really likes the look of the double e’s in the word “beekeeper”. Your task is to help identify other words Bill will really like.\nBill’s affinity for a word is determined by how many pairs of double vowels it has, where vowels are the letters {a,e,i,o,u,y}. Given a list of words, find the word that has the most pairs of double vowels, as it will be Bill’s favorite word.\nNotes:\n- It is guaranteed that there will be a unique correct answer. That is, one word in the list will have strictly more pairs of vowels than all other words in the list.\n- No word in the input will have three or more of the same vowel consecutively, because that would just be too much for poor Bill.\n ---INPUT--- \n The input will contain multiple test cases, up to 10 . The first line of each case contains N, the number of words in that case (0 < N <= 1000). The next N lines will contain the words that make up that case. Each word will contain only lowercase English letters [a-z], and no word will be longer than 80 characters. Words will not necessarily be actual English words, but they will contain at least one letter. The input will be terminated by a line containing a single zero.\n ---OUTPUT--- \n For each case, print Bill’s favorite word. Each output should be printed on its own line. \n ---Examples--- \n\n Sample Input 1: \n4\nartist\nengineer\nbeekeeper\nprogrammer\n3\nbookkatt\njailaikia\nyeehaaw\n0\n\n Sample Output 1: \nbeekeeper\nyeehaaw" },
    {"problem_name": "Cross Country", "url": "https://open.kattis.com/problems/crosscountry?tab=metadata" ,"difficulty": "2.7 Easy", "description": "Charles Johnson is on his way to meet his very good friend Bernard Terrell. They are going on their bi-weekly skiing trip. Today Charles had forgot all about the Kvikk Lunsj and had to go back home to get it. This has left him very late, and to make things worse all the parking spots close to the meeting spot has been taken. Given the workout diary of Charles, could you help find the fastest path to the meeting spot?\n ---INPUT--- \n The first line of the input consists of three space-separated integers N, S, T, representing the number of intersections in the ski tracks networks, the index of the intersection where Charles parked his car and the index of the intersection where Charles agreed to meet Bernard. Then follows N lines. Each of the lines consists of N space-separated integers D_{ij}. The integer on line i and column j describes the time in minutes it takes for Charles to get from intersection i to intersection j. \n ---OUTPUT--- \nThe output should be a single line consisting of the minimum number of minutes Charles will have to use to get to the meeting point to share some Kvikk Lunsj with Bernard.\n ---LIMITS--- \n1. 1 <= N <= 1000 \n2. 0 <= S, T < N \n3. 1 <= D_{ij} < 10000 for i != j \n4. D_{ii} = 0.\n ---Examples--- \n\n Sample Input 1: \n4 1 3\n0 1 3 14\n2 0 4 22\n3 10 0 7\n13 8 2 0\n\n Sample Output 1: \n11" },
    {"problem_name": "Candle Box", "url": "https://open.kattis.com/problems/candlebox?tab=metadata" ,"difficulty": "2.7 Easy", "description": "Rita loves her Birthday parties. She is really happy when blowing the candles at the Happy Birthday’s clap melody. Every year since the age of four she adds her birthday candles (one for every year of age) to a candle box. Her younger daydreaming brother Theo started doing the same at the age of three. Rita’s and Theo’s boxes look the same, and so do the candles.\nOne day Rita decided to count how many candles she had in her box:\n– No, no, no! I’m younger than that!\nShe just realized Theo had thrown some of his birthday candles in her box all these years. Can you help Rita fix the number of candles in her candle box?\n ---TASK--- \n Given the difference between the ages of Rita and Theo, the number of candles in Rita’s box, and the number of candles in Theo’s box, find out how many candles Rita needs to remove from her box such that it contains the right number of candles.\n ---INPUT--- \n The first line of the input has one integer D, corresponding to the difference between the ages of Rita and Theo. \n The second line has one integer R, corresponding to the number of candles in Rita’s box. \n The third line has one integer T, corresponding to the number of candles in Theo’s box.\n ---CONSTRAINTS--- \n1 <= D <= 20 Difference between the ages of Rita and Theo\n4 <= R < 1000 Number of candles in Rita’s box\n0 <= T < 1000 Number of candles in Theo’s box\n ---OUTPUT--- \n An integer representing the number of candles Rita must remove from her box such that it contains the right number of candles.\n ---Examples--- \n\n Sample Input 1: \n2\n26\n8\n\n Sample Output 1: \n4" },
    {"problem_name": "Prime Reduction", "url": "https://open.kattis.com/problems/primereduction" ,"difficulty": "2.7 Easy", "description": "A prime number p >= 2  is an integer which is evenly divisible by only two integers: 1 and p. A composite integer is one which is not prime. The fundamental theorem of arithmetic says that any integer x can be expressed uniquely as a set of prime factors – those prime numbers which, when multiplied together, give x. Consider the prime factorization of the following numbers:\n 10 = 2 * 5  16 = 2 * 2 * 2 * 2  231 = 3 * 7 * 11 \n Consider the following process, which we’ll call prime reduction. Given an input x: \n 1. if x is prime, print x and stop. \n 2. factor x into its prime factors p_1,p_2,...,p_k \n 3. let x = p_1+p_2+...+p_k \n 4. go back to step 1 \n Write a program that implements prime reduction. \n ---INPUT--- \n Input consists of a sequence of up to 20000 integers, one per line, in the range 2 to 10^9. The number 4 will not be included in the sequence (try it to see why it’s excluded). Input ends with a line containing only the number 4. \n ---OUTPUT--- \n For each integer, print the value produced by prime reduction executed on that input, followed by the number of times the first line of the process executed.  \n ---Examples--- \n\n Sample Input 1: \n2\n3\n5\n76\n100\n2001\n4\n\n Sample Output 1: \n2 1\n3 1\n5 1\n23 2\n5 5\n5 6" },
    {"problem_name": "Battle Simulation", "url": "https://open.kattis.com/problems/battlesimulation?tab=metadata" ,"difficulty": "2.7 Easy", "description": "A terrible monster is rampaging through Neo Tokyo 5! The Earth Defense Force (EDF) has sent a mech unit1 to defeat the monster. Because there is only a single mech unit available after previous monster rampages, the EDF has decided to simulate the upcoming battle between the mech and the monster before launching an assault. The EDF noted that the monster’s attack pattern can be simulated by a series of moves that it performs in succession. When denoting each of its moves with a single letter, the attack pattern can be simulated as a single string, which should be read from left to right. The monster has the following moves: \n - Rake, denoted by the letter ‘R’; \n -Bite, denoted by the letter ‘B’; \n - Laser breath, denoted by the letter ‘L’. \n In order to defeat the monster, the mech must perform a counter move per move that the monster makes: \n - Slice, denoted by the letter ‘S’, counters the monster’s rake;\n Kick, denoted by the letter ‘K’, counters the monster’s bite; \n - Shield, denoted by the letter ‘H’, counters the monster’s laser breath; \n However, there is one catch. When the monster performs a subsequent combination of the three moves Rake, Bite and Laser breath, in any order, it becomes a very powerful attack for which the mech must perform a single counter move called Combo breaker, denoted by the letter ‘C’. A single Combo breaker absorbs the entire combination of three moves. Any following moves from the monster will have to be countered separately or as part of a new combination. A move of the monster can never be part of more than one combination. \nThrough extensive analysis of the monster’s past behaviour, the EDF is now able to reliably predict the actions of the monster ahead of time. You are given a string representing the moves that the monster will use when battling the mech. The EDF needs you to write a program that outputs the sequence of moves that the mech must perform in order to defeat the monster. \n ---INPUT--- \n A single line containing a string of at least 1 an at most 1000000 characters, consisting of the letters ‘R’, ‘B’ and ‘L’. \n ---OUTPUT--- \n Output a single string consisting of the letters denoting the moves that are to be made in succession by the mech in order to defeat the monster. \n ---Examples--- \n\n Sample Input 1: \nRRBBBLLR\n\n Sample Output 1: \nSSKKKHHS\n\n Sample Input 2: \nRBLLLBRR\n\n Sample Output 2: \nCHCS\n\n Sample Input 3: \nRBLBR\n\n Sample Output 3: \nCKS" },
    {"problem_name": "Which Base is it Anyway?", "url": "https://open.kattis.com/problems/whichbase" ,"difficulty": "2.7 Easy", "description": "Programming languages such as C++ and Java can prefix characters to denote the base of constant integer values. For example, hexadecimal (base 16) constants are preceded by the string “0x”. Octal (base 8) values are preceded by the character “0” (zero). Decimal (base 10) values do not have a prefix. For example, all the following represent the same integer constant, albeit in different bases.\n0x1234\n011064\n4660\nThe prefix makes it clear to the compiler what base the value is in. Without the “0x” prefix, for example, it would be impossible for the compiler to determine if 1234 was hexadecimal. It could be octal or decimal.\nFor this problem, you will write a program that interprets a string of decimal digits as if it were an octal value, a decimal value or a hexadecimal value.\n ---INPUT--- \nThe first line of input contains a single decimal integer P,(1<=P<=100), which is the number of data sets that follow. Each data set should be processed identically and independently.\nEach data set consists of a single line of input. It contains the data set number, K, followed by a single space, followed by a string of at most 7 decimal digits. \n ---OUTPUT--- \n For each data set there is one line of output. The single output line consists of the data set number, K, followed by a space followed by 3 space separated decimal integers which are the value of the input as if it were interpreted to as octal, decimal and hexadecimal respectively. If the input value cannot be interpreted as an octal value, use the value 0.\n ---Examples--- \n\n Sample Input 1: \n4\n1 1234\n2 9\n3 1777\n4 129\n\n Sample Output 1: \n1 668 1234 4660\n2 0 9 9\n3 1023 1777 6007\n4 0 129 297" },
    {"problem_name": "99 Problems", "url": "https://open.kattis.com/problems/99problems" ,"difficulty": "2.7 Easy", "description": "Ingrid is the founder of a company that sells bicycle parts. She used to set the prices of products quite arbitrarily, but now she has decided that it would be more profitable if the prices end in 99.\nYou are given a positive integer N, the price of a product. Your task is to find the nearest positive integer to N  which ends in 99.  If there are two such numbers that are equally close, find the bigger one.\n ---INPUT--- \n The input contains one integer N (1 <= N <= 10^4) , the price of a product. It is guaranteed that the number N does not end in 99.\n ---OUTPUT--- \nPrint one integer, the closest positive integer that ends in 99.  In case of a tie, print the bigger one.\n ---Examples--- \n\n Sample Input 1: \n10\n\n Sample Output 1: \n99\n\n Sample Input 2: \n249\n\n Sample Output 2: \n299\n\n Sample Input 3: \n10000\n\n Sample Output 3: \n9999" },
    {"problem_name": "Awkward Party", "url": "https://open.kattis.com/problems/awkwardparty?tab=metadata" ,"difficulty": "2.7 Easy", "description": "Martin has invited everyone he knows to celebrate his 535th birthday, and a whopping n people from all over the world have accepted the invitation.\nWhen deciding the seating arrangement, Martin’s mother Margarethe have decided that all the guests should be seated with maximum awkwardness; this is to ensure that nobody has anything meaningful to discuss during dinner, and everyone would instead silently enjoy her rather tasty coriander soup (as the saying goes; “when the food is good, conversation dies”).\nMargarethe knows that awkwardness is maximized if the guests are seated in a long row along a single table, in such a way that nobody sits next to someone speaking the same language as themselves. Better yet, she has defined the awkwardness level of a seating arrangement to be the minimum number of seats separating any two guests speaking the same language. If no two people speak the same language, the awkwardness level is defined to be n (the number of guests). Two seats next to each other are said to be separated by 1. \nGiven the languages spoken in a proposed seating arrangement, can you help Margarethe determine the awkwardness level?\n ---INPUT--- \n The first line contains an integer n (1 <= n <= 100000)  denoting the number of guests. On the second line follows n integers, the i'th of which x_i (0 <= x_i <= 10^9) indicating the language spoken by the guest seated at position i  in the proposed arrangement (each guest speaks exactly one language).\n ---OUTPUT--- \nA single integer, the awkwardness level of the proposed seating arrangement.\n ---Examples--- \n\n Sample Input 1: \n4\n1 2 3 1\n\n Sample Output 1: \n3\n\n Sample Input 2: \n3\n1 2 3\n\n Sample Output 2: \n3" }
],
 
"medium": [
    {"problem_name": "Left and Right", "url": "https://open.kattis.com/problems/leftandright?tab=metadata", "difficulty": "3.0 Medium", "description": "With modern technology advancement, it is now possible to deliver mail with a robot! There is a neighborhood on a long horizontal road, on which there are n  houses numbered 1 to n from left to right. Every day a mail delivery robot receives a pile of letters with exactly one letter for each house. Due to mechanical restrictions, the robot cannot sort the letters. It always checks the letter on top of the pile, visits the house that should receive that letter and delivers it. The robot repeats this procedure until all the letters are delivered. As a result, each of the n houses is visited by the robot exactly once during the mail delivery of a single day.\n\nThe mail delivery robot has a tracking device that records its delivery route. One day the device was broken, and the exact route was lost. However, the technical team managed to recover the moving directions of the robot from the broken device, which are represented as a string consisting of n-1 letters. The i-th letter of the string is ‘L’ (or ‘R’) if the (i+1)-th house visited by the robot is on the left (or right) of the i-th house visited. For example, if n=4 and the robot visited the houses in the order of 2,4,3,1, its moving directions would be “RLL”.\n\nWith the moving directions, it may be possible to determine the order in which the robot visited the houses. The technical team has asked you to write a program to do that. There can be multiple orders producing the same moving directions, among which you should find the lexicographically earliest order.\n ---INPUT--- \nThe input has a single integer n (2 <= n <= 2*10^5) on the first line. The second line has a string of length n-1 consisting of letters ‘L’ and ‘R’ giving the moving directions of the robot.\n ---OUTPUT--- \nOutput the lexicographically earliest order in which the robot may have visited the houses and delivered the letters according to the moving directions. Consider two different integer sequences of equal length A = (a_1, a_2, ... , a_k) and B=(b_1,b_2, ..., b_k) and let 1 <= i <= k be the lowest-numbered index where a_i != b_i. Then A is lexicographically earlier than B if a_i < b_i; otherwise B is lexicographically earlier than A.\n ---Examples--- \n\n Sample Input 1:\n3\nLR\n\n Sample Output 1:\n2\n1\n3\n\n Sample Input 2:\n6\nRLLRL\n\n Sample Output 2:\n1\n4\n3\n2\n6\n5\n\n Sample Input 3:\n6\nRRRLL\n\n Sample Output 3:\n1\n2\n3\n6\n5\n4"},
    {"problem_name": "Combination Lock", "url": "https://open.kattis.com/problems/combinationlock?tab=metadata" ,"difficulty": "3.0 Medium", "description": "Now that you’re back to school for another term, you need to remember how to work the combination lock on your locker. A common design is that of the Master Brand, shown at right. The lock has a dial with 40 calibration marks numbered 0 to 39 with 0 at the top and then increasing in clockwise order. A combination consists of 3 of these numbers; for example: 15-25-8. To open the lock, the following steps are taken: \n - turn the dial clockwise 2 full turns \n - stop at the first number of the combination \n - turn the dial counter-clockwise 1 full turn\n - continue turning counter-clockwise until the 2nd number is reached\n - turn the dial clockwise again until the 3rd number is reached\n - pull the shank and the lock will open.\n Given the initial position of the dial and the combination for the lock, how many degrees is the dial rotated in total (clockwise plus counter-clockwise) in opening the lock?\n ---INPUT--- \n Input consists of several test cases, at most 2000. For each case there is a line of input containing 4 numbers between 0 and 39. The first number is the position of the dial. The next three numbers are the combination. Consecutive numbers in the combination will be distinct. A line containing four zeros follows the last case.\n ---OUTPUT--- \nFor each case, print a line with a single integer: the number of degrees that the dial must be turned to open the lock.\n ---Examples--- \n\n Sample Input 1: \n0 30 0 30\n5 35 5 35\n0 20 0 20\n7 27 7 27\n0 10 0 10\n9 19 9 19\n0 0 0 0\n\n Sample Output 1: \n1350\n1350\n1620\n1620\n1890\n1890" },
    {"problem_name": "The Uxuhul Voting System", "url": "https://open.kattis.com/problems/uxuhulvoting?tab=metadata" ,"difficulty": "3.1 Medium", "description": "One of the world’s first civilisations was that of the ancient Uxuhul indians, in the jungles of Central America. The Uxuhul culture flourished for almost a thousand years, with its golden era around 3200 BC. Each year high priests, representing different parts of the realm, gathered in the capital to vote on important matters. There were always exactly three issues to vote on, and each issue was a simple yes/no question. The three issues were all decided in one single voting round, in the following manner:\n All the priests would gather in a large room, with a table in the centre. On the table lie three flat stones, each with one white, and one black side. Each stone represented an issue, with the black side up symbolising the outcome “no” and the white side the outcome “yes”. Initially all stones had the black side up, representing negative outcome on all issues. In order of age, from youngest to oldest, each priest voted, by turning exactly one stone, thus (temporarily) changing the outcome of one issue. It was not allowed to skip the vote, each priest had to flip a stone. The colours of the side facing up on the stones after the oldest priest had flipped the stone of his choice, determined the final outcome of the voting on the three issues.\n The Uxuhul political life was rather complex, with a lot of lobbying by different interest groups. Lobbying (and bribery), gave each priest preferences between the eight different outcomes of the three issues. Religious rules forced each priest to publicly state his preference order between the eight outcomes, before the voting process started. Based on knowledge of each other priest’s preferences, it was possible for the priests to choose a stone to flip in the way that it gained their interest best. As the Uxuhul were advanced logicians, with deep knowledge of game theory, each priest was actually able to vote in the optimal way!\n Eventually, the complexity and rigidity of their political system brought the Uxuhul culture to collapse. Today only ruins remain of their cities and temples. Historians and archaeologists try to understand more about their history by studying the results from their yearly votes. However, only records of the priests’ preferences remain, not the actual outcomes of the votes. Now it is your task to find a way to recover the outcomes.\n ---INPUT--- \n The input begins with an integer n, 1 < n < 100, , the number of voting rounds. Starting on the next line, n problems follow, one by one. Each voting starts with a line containing an integer m, 1 <= m <= 100, stating the number of voting priests. Then there are m lines, defining the preference order for the outcomes of the three issues for each voter, in order, starting with the voter who will begin the voting procedure. The preferences for each outcome (NNN, NNY, NYN, NYY, YNN, YNY, YYN, and YYY respectively, where ‘N’ stands for no and ‘Y’ for yes), are given as an integer in the range [1...8]. Lower numbers indicate higher preference. The preferences for the eight outcomes are given in the same order as the enumeration of the outcomes above.\n ---OUTPUT--- \nFor each of the n voting problems, output one line describing the outcome of the votes for the three issues, ‘Y’ for yes, and ‘N’ for no.\n ---Examples--- \n\n Sample Input 1: \n2\n4\n8 7 6 5 4 3 2 1\n8 6 3 1 2 4 5 7\n8 3 6 5 1 2 7 4\n1 2 3 4 5 6 7 8\n1\n1 2 3 4 5 6 7 8\n\n Sample Output 1: \nNYY\nNNY" },
    {"problem_name": "Crop Triangles (Easy)", "url": "https://open.kattis.com/problems/cropeasy?tab=metadata" ,"difficulty": "3.1 Medium", "description": "Note that this is an easier version of the problem crophard.\nSome pranksters have watched too much Discovery Channel and now they want to build a crop triangle during the night. They want to build it inside a large crop that looks like an evenly spaced grid from above. There are some trees planted on the field. Each tree is situated on an intersection of two grid lines (a grid point). The pranksters want the vertices of their crop triangle to be located at these trees. Also, for their crop triangle to be more interesting they want the center of that triangle to be located at some grid point as well. We remind you that if a triangle has the vertices \n(x_1,y_1),(x_2,y_2) and (x_3,y_3), then the center for this triangle will have the coordinates ((x_1+x_2+x_3)/3,(y_1+y_2+y_3)/3).\nYou will be given a set of points with integer coordinates giving the location of all the trees on the grid. You are asked to compute how many triangles you can form with distinct vertices in this set of points so that their center is a grid point as well (i.e. the center has integer coordinates).\nIf a triangle has area 0 we will still consider it a valid triangle.\n ---INPUT--- \nThe first line of input gives the number of cases, T.\n T test cases follow. Each test case consists of one line containing the integers n, A, B, C, D, x_0, y_0 and M separated by exactly one space. n  will be the number of trees in the input set.\n Using the numbers n, A, B, C, D, x_0, y_0 and M the following pseudocode will print the coordinates of the trees in the input set. mod  indicates the remainder operation. The parameters will be chosen such that the input set of trees will not have duplicates.\nX = x0, Y = y0\nprint X, Y\nfor i = 1 to n-1\n    X = (A * X + B) mod M\n    Y = (C * Y + D) mod M\n    print X, Y\nYou can assume that 1 <= T <= 10; 0 <= A, B, C, D, x_0, y_0 <= 10^9; 1 <= M <= 10^9  and 3 <= n <= 100. \n ---OUTPUT--- \nFor each test case, output one line containing \"Case #X: \" where X is the test case number (starting from 1). This should be followed by an integer indicating the number of triangles which can be located at 3 distinct trees and has a center that is a grid point.\n ---Examples--- \n\n Sample Input 1: \n2\n4 10 7 1 2 0 1 20\n6 2 0 2 1 1 2 11\n\n Sample Output 1: \nCase #1: 1\nCase #2: 2" },
    {"problem_name": "Relatives", "url": "https://open.kattis.com/problems/relatives?tab=metadata" ,"difficulty": "3.2 Medium", "description": "Given n, a positive integer, how many positive integers less than n are relatively prime to n? Two integers a and b are relatively prime if there are no integers x >= 2, y >= 1, z >=1 such that a = xy and b = xz.\n ---INPUT--- \n There up to 10 test cases. For each test case, standard input contains a line with 1 <= n <= 1000000000. A line containing 0 follows the last case.\n ---OUTPUT--- \nFor each test case there should be single line of output answering the question posed above.\n ---Examples--- \n\n Sample Input 1: \n7\n12\n0\n\n Sample Output 1: \n6\n4" },
    {"problem_name": "Bank Queue", "url": "https://open.kattis.com/problems/bank?tab=metadata" ,"difficulty": "3.2 Medium", "description": "Oliver is a manager of a bank near KTH and wants to close soon. There are many people standing in the queue wanting to put cash into their accounts after they heard that the bank increased the interest rates by 42% (from 0.01% per year to 0.0142% per year).\nHowever, there are too many people and only one counter is open which can serve one person per minute. Greedy as Oliver is, he would like to select some people in the queue, so that the total amount of cash stored by these people is as big as possible and that money then can work for the bank overnight.\nThere is a problem, though. Some people don’t have the time to wait until the bank closes because they have to run somewhere else, so they have to be served before a certain time, after which they just leave. Oliver also turned off the infrared door sensor outside the bank, so that no more people can enter, because it’s already too crowded in the hall.\n --- TASK ---\nHelp Oliver calculate how much cash he can get from the people currently standing in the queue before the bank closes by serving at most one person per minute.\n ---INPUT--- \n The first line of input contains two integers N (1 <= N <= 10000) and T (1 <= T <= 47), the number of people in the queue and the time in minutes until Oliver closes the bank. Then follow N lines, each with 2 integers c_i and t_i, denoting the amount of cash in Swedish crowns person i has and the time in minutes from now after which person i leaves if not served. Note that it takes one minute to serve a person and you must begin serving a person at time t_i at the latest. You can assume that 1 <= c_i <= 100000 and 0 <= t_i <= T.\n ---OUTPUT--- \nOutput one line with the maximum amount of money you can get from the people in the queue before the bank closes.\n ---Examples--- \n\n Sample Input 1: \n4 4\n1000 1\n2000 2\n500 2\n1200 0\n\n Sample Output 1: \n4200\n\n Sample Input 2: \n3 4\n1000 0\n2000 1\n500 1\n\n Sample Output 2: \n3000" },
    {"problem_name": "Guessing Game", "url": "https://open.kattis.com/problems/guessinggame?tab=metadata" ,"difficulty": "3.3 Medium", "description": "Stan and Ollie are playing a guessing game. Stan thinks of a number between 1 and 10 (inclusive) and Ollie guesses what the number might be. After each guess, Stan indicates whether Ollie’s guess is too high, too low, or right on.\nAfter playing several rounds, Ollie has become suspicious that Stan cheats; that is, that he changes the number between Ollie’s guesses. To prepare his case against Stan, Ollie has recorded a transcript of several games. You are to determine whether or not each transcript proves that Stan is cheating.\n ---INPUT--- \n Standard input consists of several transcripts. Each transcript consists of a number of paired guesses and responses. A guess is a line containing single integer between 1 and 10 (inclusive), and a response is a line containing “too high”, “too low”, or “right on”. Each game ends with “right on”. A line containing 0 follows the last transcript. There are at most 2500 guess-response pairs in total.\n ---OUTPUT--- \nFor each game, output a line “Stan is dishonest” if Stan’s responses are inconsistent with the final guess and response. Otherwise, print “Stan may be honest”.\n ---Examples--- \n\n Sample Input 1: \n10\ntoo high\n3\ntoo low\n4\ntoo high\n2\nright on\n5\ntoo low\n7\ntoo high\n6\nright on\n0\n\n Sample Output 1: \nStan is dishonest\nStan may be honest" },
    {"problem_name": "Phone List", "url": "https://open.kattis.com/problems/phonelist?tab=metadata" ,"difficulty": "3.3 Medium", "description": "Given a list of phone numbers, determine if it is consistent in the sense that no number is the prefix of another. Let’s say the phone catalogue listed these numbers:\n - Emergency 911 \n - Alice 97 625 999\n - Bob 91 12 54 26\nIn this case, it’s not possible to call Bob, because the central would direct your call to the emergency line as soon as you had dialled the first three digits of Bob’s phone number. So this list would not be consistent.\n ---INPUT--- \n The first line of input gives a single integer, 1 <= t <= 40, the number of test cases. Each test case starts with n, the number of phone numbers, on a separate line, 1 <= n <= 10000. Then follows n lines with one unique phone number on each line. A phone number is a sequence of at most ten digits. Note that leading zeros in phone numbers are significant, e.g., “0911” is a different phone number than “911”.\n ---OUTPUT--- \nFor each test case, output “YES” if the list is consistent, or “NO” otherwise.\n ---Examples--- \n\n Sample Input 1: \n2\n3\n911\n97625999\n91125426\n5\n113\n12340\n123440\n12345\n98346\n\n Sample Output 1: \nNO\nYES" },
    {"problem_name": "Collapse", "url": "https://open.kattis.com/problems/collapse?tab=metadata" ,"difficulty": "3.4 Medium", "description": "Trouble has come to the remote group of islands known as Insumulia. Due to an unfortunate combination of over-consumption, natural climate variations, and generally difficult conditions, the island of Incunabula has run out of trees. Because several other Insumulian islands depended on trees from Incunabula through trade, its collapse will have repercussions all over Insumulia. In this problem, we’ll simulate a (highly oversimplified) model of the situation to determine the effects of the collapse of Incunabula.\nWe model the situation as follows. Each island has a threshold T_i on the amount of incoming goods (for simplicity we assume that there is only a single commodity of goods) it needs to receive per lunar cycle in order for the society of the island to sustain itself. If the amount of incoming goods drops below the threshold, society on the island will collapse and die out, and the island will no longer provide goods to other islands, thereby potentially causing them to collapse as well. Each island provides some amount of goods to a number of other islands. If an island collapses, we assume that goods that would have been delivered to that island is effectively lost; it does not get redistributed and delivered to other islands instead. Also, once an island dies out it is not repopulated (until possibly long after the ongoing collapses have finished).\nYour job is to write a program to compute the number of islands that survive after the potential chain reaction of collapses that is caused by the collapse of Incunabula.\n ---INPUT--- \n The first line of input contains an integer N (1 <= N <= 100000), the number of islands in Insumulia.\nThen follow N lines, describing each island. The i’th such description starts with two integers T_i, K_i where 0 <= T_i <= 50000 is the amount of goods the i’th island needs to receive in order to survive, and 0 <= K_i <= N-1 is the number of other islands the i’th islands receives goods from. The remainder of the description of the i’th island is a list of K_i pairs of integers. The j’th such pair, S_{ij}, V_{ij}, indicates that island i receives V_{ij} units of goods from island S_{ij}  each lunar cycle. You may assume that the S_{ij}’s are distinct and between 1 and N (inclusive), and that none of them equals i. The values V_{ij} satisfy 1 <= V_{ij} <= 1000 and their sum is at least T_i. The sum of all the K_i’s for all the N islands is at most 500000.\nIslands are numbered from 1 to N, and Incunabula is island number 1. \n ---OUTPUT--- \nOutput a single integer, the number of islands surviving the collapses.\n ---Examples--- \n\n Sample Input 1: \n4\n0 0\n25 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n\n Sample Output 1: \n0\n\n Sample Input 2: \n4\n0 0\n20 3 1 10 3 10 4 10\n10 1 2 10\n10 1 2 10\n\n Sample Output 2: \n3" },
    {"problem_name": "Button Bashing", "url": "https://open.kattis.com/problems/buttonbashing?tab=metadata" ,"difficulty": "3.4 Medium", "description": "You recently acquired a new microwave, and noticed that it provides a large number of buttons to be able to quickly specify the time that the microwave should be running for. There are buttons both for adding time, and for subtracting time. You wonder how efficient you can be when entering cooking times: you want to minimize the number of required button presses.\nThe microwave can be running for at least 0 seconds, and at most 1 hour. If a button press would result in a cooking time of less than 0 seconds, the microwave will set the cooking time to 0 seconds. If a button press would result in a cooking time of more than 1 hour, the microwave will set the cooking time to 1 hour. Initially, the microwave will run for 0 seconds. There will always be a button adding at least 1 second to the cooking time.\nGiven the buttons that the microwave provides for entering cooking times, determine the least amount of button presses required to let the microwave run for a certain amount of time. If it is not possible to enter the desired cooking time precisely, determine the smallest achievable cooking time above the target, and the minimum number of button presses required for that cooking time, instead. The microwave does not allow to adjust the cooking time once it has started cooking.\n ---INPUT--- \nOn the first line one positive number: the number of test cases, at most 100. After that per test case:\n- one line with two space-separated integers n and t (1 <= n <= 16 and 0 <= t <= 3600): the number of buttons available to change the cooking time, and the desired cooking time in seconds, respectively.\n- one line with n space-separated integers b_i (-3600 <= b_i <= 3600): the number of seconds added to the cooking time when button i is pressed.\n ---OUTPUT--- \nPer test case:\n- one line with two space-separated integers: the minimum number of button presses required to reach the required cooking time, and the minimum number of extra seconds that the microwave must be running for, respectively.\n ---Examples--- \n\n Sample Input 1: \n2\n3 50\n-10 10 60\n1 50\n20\n\n Sample Output 1: \n2 0\n3 10" },
    {"problem_name": "Biased Standings", "url": "https://open.kattis.com/problems/standings?tab=metadata" ,"difficulty": "3.5 Medium", "description": "Usually, results of competitions are based on the scores of participants. However, we are planning a change for the next year of IPSC. During the registration each team will be able to enter a single positive integer – their preferred place in the ranklist. We would take all these preferences into account, and at the end of the competition we will simply announce a ranklist that would please all of you.\nBut wait… How would that ranklist look like if it won’t be possible to satisfy all the requests?\nSuppose that we already have a ranklist. For each team, compute the distance between their preferred place and their place in the ranklist. The sum of these distances will be called the badness of this ranklist.\nGiven team names and their preferred placements find one ranklist with the minimal possible badness.\n ---INPUT--- \n The first line of the input file contains an integer T, T <= 20, specifying the number of test cases. Each test case is preceded by a blank line.\nEach test case looks as follows: The first line contains an integer N (N <= 100000 – the number of teams participating in the competition. Each of the next N lines contains a team name (a string of letters and numbers of length at most 20) and its preferred place (an integer between 1 and N, inclusive). No two team names will be equal.\n ---OUTPUT--- \nFor each of the test cases output a single line with a single integer – the badness of the best ranklist for the given teams.\n ---Examples--- \n\n Sample Input 1: \n2\n\n7\nnoobz 1\nllamas 2\nWinn3rz 2\n5thwheel 1\nNotoricCoders 5\nStrangeCase 7\nWhoKnows 7\n\n3\nThreeHeadedMonkey 1\nMoscowSUx13 1\nNeedForSuccess 1\n\n Sample Output 1: \n5\n3" },
    {"problem_name": "Fridge", "url": "https://open.kattis.com/problems/fridge?tab=metadata" ,"difficulty": "3.5 Medium", "description": "The technology behind the fridge has changed little over the years. Even so, many of the original owners of the Fred W. Wolf domestic refrigerator of 1913 would be amazed by the size and features of the modern appliances. However, since the 1960s one thing has been common for all fridge owners around the world: fridge magnets.\nAn effective, albeit lazy, way to keep a small child entertained is to supply them with a set of magnetic numbers and a large magnetic surface, such as said fridge, to provide the playing field upon which to apply these digits.\nFar from a time-wasting exercise, this provides valuable training in the mathematical field of counting: moving the digits around to form “1”, “2”, and so on up to such heights as “10”, “11”, “12”, and even beyond.\nThe possibilities are endless! ...Or at least, they would be, if the supply of digits was not limited. Given the full list of what numbers we are in possession of, what is the smallest positive number that cannot be made using each of digits at most once?\n ---INPUT--- \n - One string of at most 1000 digits, containing the available digits in no particular order.\n ---OUTPUT--- \n-One line containing one positive integer: the smallest natural number that it is not possible to assemble from the supplied digits.\n ---Examples--- \n\n Sample Input 1: \n7129045863\n\n Sample Output 1: \n11\n\n Sample Input 2: \n55\n\n Sample Output 2: \n1\n\n Sample Input 3: \n123456789\n\n Sample Output 3: \n10" },
    {"problem_name": "Dividing Sequence", "url": "https://open.kattis.com/problems/sequence?tab=metadata" ,"difficulty": "3.6 Medium", "description": "You are given an integer N. Your task is to find the longest sequence of integers a_1 < a_2 < ... < a_k, such that a_i divides a_{i+1} and 1 <= a_i <= N for all i.\n ---INPUT--- \n The input contains one line with integer N, 1 <= N <= 1000000.\n ---OUTPUT--- \nThe first line of output contains the length of the longest sequence. The second line contains space separated numbers a_1, ... , a_k in increasing order.\n ---Examples--- \n\n Sample Input 1: \n6\n\n Sample Output 1: \n3\n1 3 6" },
    {"problem_name": "Open Source", "url": "https://open.kattis.com/problems/opensource?tab=metadata" ,"difficulty": "3.6 Medium", "description": "At an open-source fair held at a major university, leaders of open-source projects put sign-up sheets on the wall, with the project name at the top in capital letters for identification.\nStudents then signed up for projects using their userids. A userid is a string of lower-case letters and numbers starting with a letter.\nThe organizer then took all the sheets off the wall and typed in the information.\nYour job is to summarize the number of students who have signed up for each project. Some students were overly enthusiastic and put their name down several times for the same project. That’s okay, but they should only count once. Students were asked to commit to a single project, so any student who has signed up for more than one project should not count for any project.\nThere are at most 10,000 students at the university, and at most 100 projects were advertised.\n ---INPUT--- \nThe input contains several test cases, each one ending with a line that starts with the digit 1. The last test case is followed by a line starting with the digit 0.\nEach test case consists of one or more project sheets. A project sheet consists of a line containing the project name in capital letters, followed by the userids of students, one per line.\n ---OUTPUT--- \nFor each test case, output a summary of each project sheet. The summary is one line with the name of the project followed by the number of students who signed up. These lines should be printed in decreasing order of number of signups. If two or more projects have the same number of signups, they should be listed in alphabetical order.\n ---Examples--- \n\n Sample Input 1: \nUBQTS TXT\ntthumb\nLIVESPACE BLOGJAM\nphilton\naeinstein\nYOUBOOK\nj97lee\nsswxyzy\nj97lee\naeinstein\nSKINUX\n1\n0\n\n Sample Output 1: \nYOUBOOK 2\nLIVESPACE BLOGJAM 1\nUBQTS TXT 1\nSKINUX 0" },
    {"problem_name": "Candy Distribution", "url": "https://open.kattis.com/problems/candydistribution?tab=metadata" ,"difficulty": "3.7 Medium", "description": "Kids like candy, so much that they start beating each other if the candy is not fairly distributed. So at your next party, you better start thinking before you buy the candy.\nIf there are K kids, you of course need K * X candies for a fair distribution, where X is a positive natural number. But you learned that there is always one kid that loses one candy, so you better be prepared with exactly one spare candy, resulting in (K * X) + 1 candies.\nUsually, the candies are packed into bags with a fixed number of candies C per bag. You will buy some of these bags so that the above constraints are fulfilled.\n ---INPUT--- \nThe first line gives the number of test cases t (0 < t < 100). Each test case is specified by two integers K and C on a single line, where K  is the number of kids and C the number of candies in one bag (1 <= K, C <= 10^9). As your money is limited, you will never buy more than 10^9 candy bags.\n ---OUTPUT--- \nFor each test case, print one line. If there is no such number of candy bags to fulfill the above constraints, print “IMPOSSIBLE”. Otherwise print the number of candy bags you want to buy. If there is more than one solution, any will do.\n ---Examples--- \n\n Sample Input 1: \n5\n10 5\n10 7\n1337 23\n123454321 42\n999999937 142857133\n\n Sample Output 1: \nIMPOSSIBLE\n3\n872\n14696943\n166666655" },
    {"problem_name": "Card Magic", "url": "https://open.kattis.com/problems/cardmagic?tab=metadata" ,"difficulty": "3.7 Medium", "description": "Johanna knows mind reading magic, or so she says. Her new trick consists of lining up N decks of cards, each deck having K cards numbered from 1 to K. She asks you to think of a number T between 1 and N*K and to focus your thoughts on it. Then, by scanning the energy profiles emitted from your brain activity, she carefully picks one card from each of the N decks. Magically, the sum of the numbers on the N picked cards is exactly the number that you were thinking of! After staring at her in disbelief for quite a while, you suspect it might be a trick she pulls on many people, and that she just picks the cards at random and happened to get it right with you just by chance.\nYou start wondering just how large that chance was. You could easily compute the number of ways to pick one card from each deck, but how many of these ways have the correct sum?\n ---INPUT--- \nThe first line contains three space-separated integers 1 <= N <= 100, 1 <= K <= 50, 1 <= T <= N*K – the number of decks, the number of cards in each deck, and the number you were thinking of, respectively.\n ---OUTPUT--- \nOutput a single integer – the number of ways Johanna could have picked a card from each deck, such that the picked cards sum up to T. Since this number can be very large, output it modulo 1000000009.\n ---Examples--- \n\n Sample Input 1: \n5 2 6\n\n Sample Output 1: \n5\n\n Sample Input 2: \n5 5 25\n\n Sample Output 2: \n1\n\n Sample Input 3: \n5 4 12\n\n Sample Output 3: \n155" },
    {"problem_name": "Rimski", "url": "https://open.kattis.com/problems/rimski?tab=metadata" ,"difficulty": "3.8 Medium", "description": "Using roman numerals the numbers 1,2,3,4,5,6,7,8,9 are written as ‘I’, ‘II’, ‘III’, ‘IV’, ‘V’, ‘VI’, ‘VII’, ‘VIII’, ‘IX’. The numbers 10,20,30,40,50,60,70,80,90 are written as ‘X’, ‘XX’, ‘XXX’, ‘XL’, ‘L’, ‘LX’, ‘LXX’, ‘LXXX’, ‘XC’. Any number smaller than 100 can be written by converting tens and ones separately and concatenating the results. So, for example, the number 48 would be written as XLVIII, XL for 40 and VIII for 8. Given a number written in roman numerals, rearrange its characters so that you create the smallest possible number, written in roman numerals.\n ---INPUT--- \nThe first and only line of input contains one integer B (1 <= B < 100), written using roman numerals.\n ---OUTPUT--- \nThe first and only line of output should contain a rearrangement of input characters so that it represents the smallest possible number, written in roman numerals.\n ---Examples--- \n\n Sample Input 1: \nVII\n\n Sample Output 1: \nVII\n\n Sample Input 2: \nVI\n\n Sample Output 2: \nIV\n\n Sample Input 3: \nIII\n\n Sample Output 3: \nIII" },
    {"problem_name": "Eko", "url": "https://open.kattis.com/problems/eko?tab=metadata" ,"difficulty": "3.8 Medium", "description": "Lumberjack Mirko needs to chop down M metres of wood. It is an easy job for him since he has a nifty new woodcutting machine that can take down forests like wildfire. However, Mirko is only allowed to cut a single row of trees.\nMirko’s machine works as follows: Mirko sets a height parameter H (in metres), and the machine raises a giant sawblade to that height and cuts off all tree parts higher than H (of course, trees not higher than H meters remain intact). Mirko then takes the parts that were cut off. For example, if the tree row contains trees with heights of 20, 15, 10, and 17 metres, and Mirko raises his sawblade to 15 metres, the remaining tree heights after cutting will be 15, 15, 10, and 15 metres, respectively, while Mirko will take 5 metres off the first tree and 2 metres off the fourth tree (7 metres of wood in total).\nMirko is ecologically minded, so he does not want to cut off more wood than necessary. That is why he wants to set his sawblade as high as possible. Help Mirko find the maximum integer height of the sawblade that still allows him to cut off at least M metres of wood.\n ---INPUT--- \nThe first line of input contains two space-separated positive integers, N (the number of trees, 1 <= N <= 1000000) and M (Mirko’s required wood amount, 1 <= M <= 2000000000).The second line of input contains N space-separated non-negative integers less than 1 000 000 000, the heights of each tree (in metres). The sum of all heights will exceed M, thus Mirko will always be able to obtain the required amount of wood.\n ---OUTPUT--- \nThe first and only line of output must contain the required height setting.\n ---Examples--- \n\n Sample Input 1: \n4 7\n20 15 10 17\n\n Sample Output 1: \n15\n\n Sample Input 2: \n5 20\n4 42 40 26 46\n\n Sample Output 2: \n36" },
    {"problem_name": "Font", "url": "https://open.kattis.com/problems/font?tab=metadata" ,"difficulty": "3.9 Medium", "description": "Little Ivica got himself a summer job at a company that produces computer fonts. The branch of the company where Ivica works at specialises in testing computer fonts and Ivica’s team is responsible of testing only lowercase letters of the English alphabet.\nThe letters are tested so that various sentences using those letters are printed out and then manually (more accurately, visually) checked if everything is arranged properly. Only sentences which contain all 26 lowercase letter of the English alphabet (a–z) are used for testing purposes. These sentences are called test sentences.\nYou’ve probably already assumed that Ivica’s job is to find test sentences. He has a dictionary which consists of N words and has to calculate how many different test sentences can be made out of those words. Every word from the dictionary can be used only once in the sentence and the order of the words in the sentence is irrelevant (i.e. “uvijek jedem sarmu” and “jedem sarmu uvijek” are equal sentences).\n ---INPUT--- \nThe first line of input contains the integer N (1 <= N <= 25) , the number of words in the dictionary. Each of the following N lines contains a single word from the dictionary, its length not exceeding 100. All the words from the dictionary are going to be unique.\n ---OUTPUT--- \nThe first and only line of output must contain the required number from the task.\n ---Examples--- \n\n Sample Input 1: \n9\nthe\nquick\nbrown\nfox\njumps\nover\na\nsleazy\ndog\n\n Sample Output 1: \n2\n\n Sample Input 2: \n3\na\nb\nc\n\n Sample Output 2: \n0\n\n Sample Input 3: \n15\nabcdefghijkl\nbcdefghijklm\ncdefghijklmn\ndefghijklmno\nefghijklmnop\nfghijklmnopq\nghijklmnopqr\nhijklmnopqrs\nijklmnopqrst\njklmnopqrstu\nklmnopqrstuv\nlmnopqrstuvw\nmnopqrstuvwx\nnopqrstuvwxy\nopqrstuvwxyz\n\n Sample Output 3: \n8189" },
    {"problem_name": "Toys", "url": "https://open.kattis.com/problems/toys?tab=metadata" ,"difficulty": "3.9 Medium", "description": "Little Lark has a great collection of of toys. Although she has plenty of toys she only likes to play with one at a time. She decides which toy to play with by placing all the toys in a circle around her, numbering them 0 to T-1. She then spins around in the clockwise direction and removes every Kth toy until one remains. This means that the first toy that she removes is numbered K-1. If any toys are moved during this ritual Lark will start crying and then rearrange the toys in the circle in the original order.\nToday Lark wants her father to join her while playing with the toys. Her father has of course a favorite toy among Lark’s selection of toys and would of course like that specific toy to be chosen. At which position should he place his favorite toy to make sure that is the toy they end up playing with?\n ---INPUT--- \nThe input is a single line consisting of 2 integers T and K indicating the number of toys Lark has and the skip length she takes while selecting the next toy to discard.\n ---OUTPUT--- \nOutput a line with the a single integer, the position the father needs to place his favorite toy for it to be selected. Lark will start counting at position 0.\n ---LIMITS--- \n - 1 <= T <= 10000000 \n - 1 <= K <= 1000000 \n - K <= T\n ---Examples--- \n\n Sample Input 1: \n5 2\n\n Sample Output 1: \n2\n\n Sample Input 2: \n25 18\n\n Sample Output 2: \n1" },
    {"problem_name": "Where to Live?", "url": "https://open.kattis.com/problems/wheretolive?tab=metadata" ,"difficulty": "4.0 Medium", "description": "Moving to a new town can be difficult. Finding a good place to live which is close to everything you’re interested in is important. However, since you’re a great programmer, you know that you can solve this problem with an algorithm.\nEverything in your virtualized town is laid out on a grid, so every place lies on an integer coordinate grid. You’ll be given a list of coordinates of the places you are interested in in the town, and you need to choose a place to live on the grid. Your program should find the grid location that minimizes the average straight-line squared distance to every place you are interested in (squared distance so that you won’t be too far from any one location).\nYou can live anywhere on the grid, even if something already exists where you want to live (buildings can always be built taller to accommodate you).\n ---INPUT--- \nInput consists of a list of up to 100 descriptions for towns you are considering moving to. Each town description starts with a line containing 1 <= n <= 1000, the number of locations you’re interested in. The next n lines each contain two space-separated integer coordinates x and y, each in the range [1,1000]. No location is repeated within a town. Input ends when n is 0. \n ---OUTPUT--- \nFor each town, print the location you want to live on the grid. If the best location is not exactly on a grid point, choose the grid point closest to the best location. Break ties by choosing the point that has the smallest x coordinate and then the smallest y coordinate.\n ---Examples--- \n\n Sample Input 1: \n5\n82 25\n25 16\n97 59\n38 38\n15 21\n9\n51 13\n33 2\n8 46\n64 25\n13 40\n39 75\n17 42\n14 6\n3 43\n0\n\n Sample Output 1: \n51 32\n27 32" },
    {"problem_name": "Greeting Card", "url": "https://open.kattis.com/problems/greetingcard?tab=metadata" ,"difficulty": "4.0 Medium", "description": "Quido plans to send a New Year greeting to his friend Hugo. He has recently acquired access to an advanced high-precision plotter and he is planning to print the greeting card on the plotter.\nHere’s how the plotter operates. In step one, the plotter plots an intricate pattern of n dots on the paper. In step two, the picture in the greeting emerges when the plotter connects by a straight segment each pair of dots that are exactly 2018 length units apart.\nThe plotter uses a special holographic ink, which has a limited supply. Quido wants to know the number of all plotted segments in the picture to be sure that there is enough ink to complete the job.\n ---INPUT--- \n The first line of input contains a positive integer n specifying the number of plotted points. The following n lines each contain a pair of space-separated integer coordinates indicating one plotted point. Each coordinate is non-negative and less than 2^{31}. There are at most 10^5 points, all of them are distinct.\nIn this problem, all coordinates and distances are expressed in plotter length units, the length of the unit in the x-direction and in the y-direction is the same.\n ---OUTPUT--- \nThe output contains a single integer equal to the number of pairs of points which are exactly 2018 length units apart.\n ---Examples--- \n\n Sample Input 1: \n4\n20180000 20180000\n20180000 20182018\n20182018 20180000\n20182018 20182018\n\n Sample Output 1: \n4\n\n Sample Input 2: \n6\n0 0\n1680 1118\n3360 0\n5040 1118\n6720 0\n8400 1118\n\n Sample Output 2: \n5" },
    {"problem_name": "Robert Hood", "url": "https://open.kattis.com/problems/roberthood?tab=metadata" ,"difficulty": "4.1 Medium", "description": "Robert Hood, a less famous sibling of the Robin Hood, is fed up. Despite him being a young, talented archer he never seems to reach quite the same level as his legendary brother, and so he decided to come up with rules for a new archery contest, in which he will stand a better chance of winning.\nThe rules for the new kind of archery contest are quite simple: the winner is no longer the one who can score the most points, but instead the one who can achieve the longest distance between any pair of arrows hitting the target. Your task is to write the code to calculate that distance.\nEach contestant is allowed a number of arrow shots, and the coordinates of the arrows successfully hitting the target are given as a list of pairs. The coordinate system is Cartesian with the origin in the centre of the archery butt. If a contestant does not hit the target with at least two arrows he or she is disqualified and removed from the input data.\n ---INPUT--- \nThe input starts with a line containing a single positive integer C, 2 <= C <= 100000, representing the number of shots for this particular contestant. Each following line contains a pair of integer coordinates separated by a space, representing the x- and y-coordinates of a successful shot. The absolute value of any coordinate does not exceed 1000. \n ---OUTPUT--- \nPrint the longest distance between any pair of arrows as a floating point number on a single line. The answer is considered correct if it has a relative or absolute error of less than 10^-6.\n ---Examples--- \n\n Sample Input 1: \n2\n2 2\n-1 -2\n\n Sample Output 1: \n5.0\n\n Sample Input 2: \n5\n-4 1\n-100 0\n0 4\n2 -3\n2 300\n\n Sample Output 2: \n316.86590223" },
    {"problem_name": "Perica", "url": "https://open.kattis.com/problems/perica?tab=metadata" ,"difficulty": "4.1 Medium", "description": "—“I’m stopping by Žnidaršić’s house, you play the piano, Perica.”\n—“Ok, dad, I will!”\nAnd so, Perica began playing the piano. His piano consists of N keys. Each key has a value written on it, a_i. When Perica plays the piano, he presses exactly K different keys at the same time. The piano is a bit strange because, after pressing K keys at the same time, it will play only the key with the largest value. Perica is going to play each combination of K keys on the piano and he wants to know the sum of values of the keys that will be played.\nHelp Perica determine the remainder of that number modulo 1000000007.\n ---INPUT--- \nThe first line of input contains two integers N and K (1 <= N <= 100000, 1 <= K <= 50). The following line of input contains N integers a_i (0 <= a_i <= 10^9)\n ---OUTPUT--- \nThe first and only line of output must contain the required number from the task.\n ---Examples--- \n\n Sample Input 1: \n5 3\n2 4 2 3 4\n\n Sample Output 1: \n39\n\n Sample Input 2: \n5 1\n1 0 1 1 1\n\n Sample Output 2: \n4\n\n Sample Input 3: \n5 2\n3 3 4 0 0\n\n Sample Output 3: \n31" },
    {"problem_name": "Digbuild", "url": "https://open.kattis.com/problems/digbuild?tab=metadata" ,"difficulty": "4.2 Medium", "description": "Most of us like playing video games. Benni prefers to play the video game Digbuild. Digbuild is primarily about surviving for as long as possible. In the game almost everything is possible. You can climb mountains, build castles, and fish, just to name a few options. The gameworld consists of large cubes, all the same size, whose corners are always in integral coordinates in three dimensional space. The player can both break these cubes (or blocks) and place blocks next to ones already there. There are also other items in the gameworld, auxiliary to these blocks. A few examples would be beds to sleep on, frames for photographs, and torches to light the world.\nBenni isn’t a fan of building. He’d much rather dig tunnels in the ground. Benni always digs his tunnels horizontally and parallel to the x-axis of the gameworld. They are also always 3 blocks high and 3 blocks wide. Benni has just finished digging an n block long tunnel and decided to go get a glass of water. When he sits down again to play some more he notices the tunnels are rather poorly lit. He realizes he has to place some torches on the floor of his tunnel to light the up. Benni is rather insistent on his tunnel not becoming ugly so he has to places the torches strategically. Benni considers his tunnel to be ugly if two blocks sharing a face both hold a torch.\nIn Digbuild you can only place one torch per block. Benni is so against his tunnel being ugly he’d rather have them unlit completely (i.e. not placing a torch is not considered ugly).\nIn how many different ways can Benni place the torches such that his tunnel doesn’t become ugly? Since this number may be rather large you are asked to find the answer mod 10^9 + 7. \n ---INPUT--- \n The first and only line in the input contains the integer 1 <= n <= 10^{18}.\n ---OUTPUT--- \nThe only line in the output should contain the number of non-ugly torch arrangements in an n block long tunnel, mod 10^9 + 7.\n ---Examples--- \n\n Sample Input 1: \n1\n\n Sample Output 1: \n5\n\n Sample Input 2: \n4\n\n Sample Output 2: \n227\n\n Sample Input 3: \n100\n\n Sample Output 3: \n457171387" },
    {"problem_name": "Crane", "url": "https://open.kattis.com/problems/crane2?tab=metadata" ,"difficulty": "4.2 Medium", "description": "There are n crates waiting to be loaded onto a ship. The crates are numbered 1, 2,..., n, the numbers determining the order of loading. Unfortunately, someone messed up the transit and the crates are standing in a row in an arbitrary order. As there is only limited space in the dock area, you must sort the crates by swapping some of them.\nYou are given a crane that works in the following way: you select a connected interval of crates of even length. The crane then exchanges the first half of the interval with the second half. The order inside both halves remains unchanged. Determine the sequence of crane moves that reorders the crates properly.\nThe crane’s software has a bug: the move counter is a 9-based (not 10-based, as you might think) integer with at most 6 digits. Therefore, the crane stops working (and has to be serviced) after 9^6 = 531441 moves. Your solution must fit within this limit.\n ---INPUT--- \n The first line of input contains the number of test cases T, 1 <= T <= 8. The descriptions of the test cases follow:\nEach test case starts with an integer n, 1 <= n <= 10000, denoting the number of crates. In the next line a permutation of numbers {1, 2,..., n} follows.\n ---OUTPUT--- \nFor each test case print a single line containing m – the number of swaps – followed by m lines describing the swaps in the order in which they should be performed. A single swap is described by two numbers – the indices of the first and the last element in the interval to be exchanged. Do not follow the crane’s strange software design – use standard decimal numeral system.\n ---Examples--- \n\n Sample Input 1: \n2\n6\n5 4 6 3 2 1\n5\n1 2 3 4 5\n\n Sample Output 1: \n5\n1 2\n4 5\n5 6\n4 5\n1 6\n0" },
    {"problem_name": "Movie Collection", "url": "https://open.kattis.com/problems/moviecollection?tab=metadata" ,"difficulty": "4.3 Medium", "description": "Mr. K. I. has a very big movie collection. He has organized his collection in a big stack. Whenever he wants to watch one of the movies, he locates the movie in this stack and removes it carefully, ensuring that the stack doesn’t fall over. After he finishes watching the movie, he places it at the top of the stack.\nSince the stack of movies is so big, he needs to keep track of the position of each movie. It is sufficient to know for each movie how many movies are placed above it, since, with this information, its position in the stack can be calculated. Each movie is identified by a number printed on the movie box.\nYour task is to implement a program which will keep track of the position of each movie. In particular, each time Mr. K. I. removes a movie box from the stack, your program should print the number of movies that were placed above it before it was removed.\n ---INPUT--- \n On the first line a positive integer: the number of test cases, at most 100. After that, for each test case output:\n - one line with two integers m and r (1 <= m, r <= 100000): the number of movies in the stack and the number of locate requests, and\n - one line with r integers a_1, ..., a_r (1 <= a_i <= m) representing the identification numbers of movies that Mr. K. I. wants to watch.\nFor simplicity, assume that the initial stack contains the movies with identification numbers 1, 2, ..., m in increasing order, where the movie box with label 1 is the top-most box.\n ---OUTPUT--- \nPer test case:\n - one line with r integers, where the i-th integer gives the number of movie boxes above the box with label a_i, immediately before this box is removed from the stack.\n Note that after each locate request a_i, the movie box with label a_i is placed at the top of the stack.\n ---Examples--- \n\n Sample Input 1: \n2\n3 3\n3 1 1\n5 3\n4 4 5\n\n Sample Output 1: \n2 1 0\n3 0 4" },
    {"problem_name": "Judo Championship", "url": "https://open.kattis.com/problems/judochampionship?tab=metadata" ,"difficulty": "4.3 Medium", "description": "There are n judokas participating in the judo championship. Each judoka is assigned a unique number from 1 to n. There are currently m scheduled matches. The i-th match is between judokas u_i and v_i.\nA judoka s will say that they are stronger than judoka t if at least one of the following conditions is satisfied:\nJudoka s beats judoka t in a match.\nJudoka s beats judoka u in a match, and judoka u says that they are stronger than judoka t.\nUnfortunately, by this definition, it is possible for both judokas s and t to say that they are stronger than the other. The ambiguity of the results of the judo championship is the number of pairs of judokas s and t such that judoka s says that they are stronger than judoka t, and judoka t says that they are stronger than judoka s.\nSince the matches have not been played yet, you, the judge, wonder what’s the maximum possible ambiguity of the results of the judo championship. After all, you do not want the results to be too ambiguous!\n ---INPUT--- \nThe first line contains two integers n and m, denoting the number of judokas and the number of scheduled matches (2 <= n <= 100000; 1 <= m <= 100000). \nThe next m lines each contain two integers u_i and v_i, denoting the judokas participating in the i-th match (1 <= u_i, v_i <=n; u_i != v_i).\n ---OUTPUT--- \nOutput a binary string of length m, denoting a possible result of the scheduled matches which results in the maximum possible ambiguity. The i-th character of the string should be 0 if judoka u_i wins the i-th match, and 1 if judoka v_i wins the i-th match. You do not need to output the ambiguity of the results of the judo championship.\n ---Examples--- \n\n Sample Input 1: \n2 2\n1 2\n1 2\n\n Sample Output 1: \n01\n\n Sample Input 2: \n4 4\n1 2\n2 3\n3 1\n3 4\n\n Sample Output 2: \n0000" },
    {"problem_name": "Programming Tutors", "url": "https://open.kattis.com/problems/programmingtutors?tab=metadata" ,"difficulty": "4.4 Medium", "description": "You are the founder of the Bruce Arden Programming Collective, which is a tutoring programme that matches experienced programmers with newbies to teach them. You have N students and N tutors, but now you have to match them up. Since the students will have to travel to their tutors’ houses from their own (or vice versa) you decide to do your matching based on travel distance.\nMinimising overall distance doesn’t seem fair; it might happen that one student has to travel a huge distance while all the other students get a tutor very close by, even though the tutors could have been split up so that each gets a tutor that is at least somewhat close.\nThus, you opt to minimise the distance travelled by the student who is worst off; one pairing of students to tutors is better than another if the student who has to travel farthest in the first pairing has to travel less far than the student who has to travel farthest in the second pairing.\nBecause the students live in a city, the distance that a student needs to travel is not the literal distance between them and their tutor. Instead, the distance between points (X,Y) and (X', Y') in the city is\n |X-X'| + |Y-Y'|\n ---INPUT--- \n The first line of the input contains an integer N, with 1 <= N <= 100, the number of students and the number of tutors to pair up.\n Then, there are N lines, each with two integers with absolute value at most 10^8, which give the locations of the N students.\n These are followed by N  lines, each with two integers with absolute value at most 10^8, which give the locations of the N tutors.\nNote that it is possible for students and/or tutors to have identical locations (they may share a house).\n ---OUTPUT--- \nOutput a single line containing a single integer K, where K is the least integer such that there exists a pairing of students to tutors so that no pair has distance greater than K between them.\n ---Examples--- \n\n Sample Input 1: \n2\n0 0\n0 3\n0 2\n0 5\n\n Sample Output 1: \n2\n\n Sample Input 2: \n4\n0 1\n0 2\n0 3\n0 4\n1 0\n1 1\n1 2\n1 3\n\n Sample Output 2: \n2\n\n Sample Input 3: \n3\n0 5\n5 2\n4 5\n3 3\n5 2\n5 2\n\n Sample Output 3: \n5\n\n Sample Input 4: \n2\n0 0\n0 5\n-1 4\n8 3\n\n Sample Output 4: \n10" },
    {"problem_name": "King's Colors", "url": "https://open.kattis.com/problems/kingscolors?tab=metadata" ,"difficulty": "4.4 Medium", "description": "Far, far away, there is the mystical Kingdom of Trees (more formally, “Royal Commonwealth of Connected Undirected Simple Acyclic Graphs”). The King there is very sad because his kingdom is not accepted as a sovereign state in the United Nations. In order to become a member, he needs to make a flag the UN can put on their website.\nThe flag will of course consist of the King’s favorite tree, which contains n nodes. The King would be happy to just have the tree colored in black and white, but for the sake of his wife the Queen, he decided that the tree will contain all the favorite colors of their k children (they all have distinct favorite colors). Clearly, no two neighboring nodes can have the same color, but otherwise any coloring of the tree using exactly the k colors would make a feasible flag candidate.\nHow many different flags are possible?\n ---INPUT--- \n The first line contains two integers n and k (2 <= k <= n <= 2500), where n is the number of nodes in the King’s favorite tree and k is the number of children. Then follow n-1 lines describing the edges in the tree; the i’th of these lines contains a non-negative integer p_i < i, meaning that node p_i is the parent of i.\nThe nodes are numbered from 0 to n-1 and the tree is rooted at node 0. Note that the embedding of the tree on the flag is already fixed, the only thing that remains is to assign colors.\n ---OUTPUT--- \nOutput the number of different possible color assignments. The number can be quite big, so the King has requested to know the answer modulo 1000000007.\n ---Examples--- \n\n Sample Input 1: \n4 3\n0\n1\n1\n\n Sample Output 1: \n18\n\n Sample Input 2: \n6 4\n0\n1\n1\n3\n4\n\n Sample Output 2: \n600" },
    {"problem_name": "Digit Division", "url": "https://open.kattis.com/problems/digitdivision?tab=metadata" ,"difficulty": "4.5 Medium", "description": "We are given a sequence of n decimal digits. The sequence needs to be partitioned into one or more contiguous subsequences such that each subsequence, when interpreted as a decimal number, is divisible by a given integer m.\nFind the number of different such partitions modulo 10^9 + 7. When determining if two partitions are different, we only consider the locations of subsequence boundaries rather than the digits themselves, e.g. partitions 2|22 and 22|2 are considered different.\n ---INPUT--- \n The first line contains two integers n and m (1 <= n <= 300000, 1 <= m <= 1000000) - the length of the sequence and the divisor respectively. The second line contains a string consisting of exactly n digits.\n ---OUTPUT--- \nOutput a single integer – the number of different partitions modulo 10^9+7.\n ---Examples--- \n\n Sample Input 1: \n4 2\n1246\n\n Sample Output 1: \n4\n\n Sample Input 2: \n4 7\n2015\n\n Sample Output 2: \n0" },
    {"problem_name": "Contest Advancement", "url": "https://open.kattis.com/problems/contestadvancement?tab=metadata" ,"difficulty": "4.5 Medium", "description": "You are the RCD for your regional contest. It just ended and you now need to decide which teams qualify for the next level of competition. The teams are uniquely ranked (there are no ties). The next level has a limit on how many teams from any given school can participate. However, if that limit causes there to be not enough teams advancing, the remaining slots will be filled by teams from schools over the limit. If this happens, you will always give preference to higher-ranking teams, even if it means many teams from the same school advancing.\nOutput, in rank order, the teams that qualify for the next contest.\n ---INPUT--- \n The first line of input contains three integers n, k (1 <= k < n <= 10^5) and c (1 <= c <= n), where n is the number of teams in the competition, k is the number of teams that will advance, and c is the limit on the number of teams that may advance from any given school.\nEach of the next n lines contains two integers t and s (1 <= t, s <= n)). Each line describes a team, with t being the team’s unique ID, and s indicating the team’s school. All team IDs will be distinct. The teams will be listed in rank order, with the highest ranking teams first.\n ---OUTPUT--- \nOutput k lines. On each line output a single integer, which is the ID of a team. List the IDs of the teams that qualified to advance in rank order.\n ---Examples--- \n\n Sample Input 1: \n10 7 3\n3 9\n1 9\n4 9\n5 9\n9 7\n2 7\n6 7\n7 7\n8 5\n10 5\n\n Sample Output 1: \n3\n1\n4\n9\n2\n6\n8" },
    {"problem_name": "Swap Space", "url": "https://open.kattis.com/problems/swapspace?tab=metadata" ,"difficulty": "4.6 Medium", "description": "You administer a large cluster of computers with hard drives that use various file system types to store data. You recently decided to unify the file systems to the same type. That is quite a challenge since all the drives are currently in use, all of them are filled with important data to the limits of their capacities, and you cannot afford to lose any of the data. Moreover, reformatting a drive to use a new file system may significantly change the drive’s capacity. To make the reformat possible, you will have to buy an extra hard drive. Obviously, you want to save money by minimizing the size of such extra storage.\nYou can reformat the drives in any order. Prior to reformatting a drive, you must move all data from that drive to one or more other drives, splitting the data if necessary. After a drive is reformatted, you can immediately start using it to store data from other drives. It is not necessary to put all the data on the same drives they originally started on – in fact, this might even be impossible if some of the drives have smaller capacity with the new file system. It is also allowed for some data to end up on the extra drive.\nAs an example, suppose you have four drives A, B, C, and D with drive capacities 6, 1, 3, and 3 GB. Under the new file system, the capacities become 6, 7, 5 and 5 GB, respectively. If you buy only 1 GB of extra space, you can move the data from drive B there and then reformat drive B. Now you have 7 GB free on drive B, so you can move the 6 GB from drive A there and reformat drive A. Finally, you move the six total gigabytes from drives C and D to drive A, and reformat C and D.\n ---INPUT--- \n The input begins with a line containing one integer n (1 <= n <= 10^6), which is the number of drives in your cluster. Following this are n lines, each describing a drive as two integers a and b, where a is the capacity with the old file system and b is the capacity with the new file system.\nAll capacities are given in gigabytes and satisfy 1 <= a, b <= 10^9. (One thousand petabytes should be enough for everyone, right?)\n ---OUTPUT--- \nDisplay the total extra capacity in gigabytes you must buy to reformat the drives.\n ---Examples--- \n\n Sample Input 1: \n4\n6 6\n1 7\n3 5\n3 5\n\n Sample Output 1: \n1\n\n Sample Input 2: \n4\n2 2\n3 3\n5 1\n5 10\n\n Sample Output 2: \n5" },
    {"problem_name": "Road To Savings", "url": "https://open.kattis.com/problems/roadtosavings?tab=metadata" ,"difficulty": "4.6 Medium", "description": "Pat Wholes is in charge of road maintenance in Capitol City, and boy do those roads need maintenance. The road conditions are so poor that accidents have become almost a daily event, and the surviving public is in an uproar. Now while Pat would love to pave every road in the city, he also wants to keep his job. The cost of all that paving would certainly upset the mayor, who would just as certainly replace Pat if he spends too much. So now the decision is: which roads get paved and which don’t? After thinking about this problem – and his job security – Pat came up with a bright idea: since the ultimate goal is to keep the mayor happy, he’ll pave only those roads that are on a shortest path from the mayor’s house to the mayor’s office. There actually might be several ways for the mayor to drive to work that are equally short, but that should still leave plenty of roads that aren’t on any of these paths and hence plenty of roads that don’t need to be paved (hopefully). Pat’s come down to your cubicle in the basement to ask you to determine the length of roads that don’t need to be paved.\n ---INPUT--- \n Input starts with four positive integers n m a b (n,a,b <= 100, a != b) where n indicates the number of intersections in the town (numbered 1 to n), m is the number of roads connecting intersections, and a and b are the intersections where the mayor’s house and office are located, respectively. Following this are m lines, each containing a triplet of positive integers i_1 i_2 l (1 <= i_1, i_2 <= n, i_1 != i_2, 1 <= l <= 100) indicating a two-way road exists between intersection i_1 and i_2 with length l. At most one road exists between any two intersections and at least one path exists between a and b.\n ---OUTPUT--- \nOutput the total length of all roads that don’t need to be paved.\n ---Examples--- \n\n Sample Input 1: \n4 5 1 4\n1 2 1\n1 3 2\n1 4 2\n4 2 1\n3 4 1\n\n Sample Output 1: \n3\n\n Sample Input 2: \n4 5 1 4\n1 2 1\n1 3 2\n1 4 1\n4 2 1\n3 4 1\n\n Sample Output 2: \n5" },
    {"problem_name": "Closest Pair (Uniform)", "url": "https://open.kattis.com/problems/closestpair1?tab=metadata" ,"difficulty": "4.7 Medium", "description": "\n ---INPUT--- \n Input contains several test cases. Each test case begins with an integer n (2 <= n <= 100000). Then follows a list of n points, one per line, each of the form x y. Coordinates are floating point values with at most 2 decimals and absolute value bounded by 100000. You may assume that the points have been generated by picking x and y independently uniformly at random in the interval [-100000, 100000]. The input is terminated by a case beginning with 0.\nWarning! This problem has a largish input file.\n ---OUTPUT--- \nFor each test case, output any closest pair of the input points, on the form x_1 y_1 x_2 y_2.\n ---Examples--- \n\n Sample Input 1: \n2\n1.12 0\n0 0.51\n3\n158 12\n123 15\n1859 -1489\n3\n21.12 -884.2\n18.18 43.34\n21.12 -884.2\n0\n\n Sample Output 1: \n0.0 0.51 1.12 0.00\n123 15 158 12.00\n21.12 -884.20 21.12 -884.20" },
    {"problem_name": "Lost in Translation", "url": "https://open.kattis.com/problems/lost?tab=metadata" ,"difficulty": "4.7 Medium", "description": "The word is out that you’ve just finished writing a book entitled How to Ensure Victory at a Programming Contest and requests are flying in. Not surprisingly, many of these requests are from foreign countries, and while you are versed in many programming languages, most spoken languages are Greek to you. You’ve done some investigating and have found several people who can translate between languages, but at various costs. In some cases multiple translations might be needed. For example, if you can’t find a person who can translate your book from English to Swedish, but have one person who can translate from English to French and another from French to Swedish, then you’re set. While minimizing the total cost of all these translations is important to you, the most important condition is to minimize each target language’s distance (in translations) from English, since this cuts down on the errors that typically crop up during any translation. Fortunately, the method to solve this problem is in Chapter 7 of your new book, so you should have no problem in solving this, right?\n ---INPUT--- \n Input starts with a line containing two integers n m indicating the number of target languages and the number of translators at your disposal (1 <= n <= 100, 1 <= m <= 4500). The second line will contain n strings specifying the n target languages. After this line are m lines of the form l_1 l_2 c where l_1 and l_2 are two different languages and c is a positive integer specifying the cost to translate between them (in either direction). The languages l_1 and l_2 are always either English or one of the target languages, and any pair of languages will appear at most once in the input. The initial book is always written in English.\n ---OUTPUT--- \nDisplay the minimum cost to translate your book to all of the target languages, subject to the constraints described above, or Impossible if it is not possible. You may assume that the minimum cost can be represented by a signed 32-bit integer.\n ---Examples--- \n\n Sample Input 1: \n4 6\nPashto French Amheric Swedish\nEnglish Pashto 1\nEnglish French 1\nEnglish Amheric 5\nPashto Amheric 1\nAmheric Swedish 5\nFrench Swedish 1\n\n Sample Output 1: \n8\n\n Sample Input 2: \n2 1\nA B\nEnglish B 1\n\n Sample Output 2: \nImpossible" },
    {"problem_name": "Six Degrees", "url": "https://open.kattis.com/problems/sixdegrees?tab=metadata" ,"difficulty": "4.8 Medium", "description": "For years and years, the ICT Senior Service Desk (ISSD) of the university has been confronted with a slow wired network that gives unexpected time-outs and seemingly random slow connection speeds. A new manager has been hired to solve these problems once and for all. The manager does not have any computer science or IT knowledge, but he does happen to have a strong background in sociology. He quickly finds that the network problems only affect devices of old professors with an office in some distant corner of the building.\nObsessed by the idea of six degrees of separation, the new manager proposes a rule to counter the network problems. This rule says that any two devices in the network should be connected via at most 5 intermediary devices. So, given the current lay-out of the university’s wired computer network, he decides to prepare a list of all devices of peripheral professors that are currently not able to connect to all other devices within 6 steps. The manager’s solution to the network problems is then to disconnect all devices on this list from the wired network at once. He explicitly ignores the fact that, possibly, then disconnecting these devices in a particular order may lead to a network structure such that some devices on the list actually no longer have to be disconnected, or that afterwards additional devices may have to be disconnected or connected to reach the actual desired result.\nThe board of the university, not having a background in computer science, IT or sociology is also not bothered by whether or not the proposed solution is correct, but will instead only base its decision on whether or not the prepared list of devices to be disconnected is not too long, so that not too many professors would be affected. The board will therefore only approve the plan if no more than 5% of the wired network devices is on the list.\nGiven the lay-out of the network, in the form of a list of pairs of IP addresses or hostnames representing directly connected devices, determine whether or not the university board will allow the new manager to execute his plan.\n ---INPUT--- \n The input starts with a line containing an integer T (1 <= T <= 2), the number of test cases. Then for each test case:\n - One line containing an integer 1 <= M <= 30000 denoting the number of (directly) connected pairs of devices (with at most 3000 unique devices).\n - M lines, each line containing two IP addresses or hostnames of (directly) connected devices, represented by two strings of printable ASCII characters (of length <= 64) without whitespace.\nEach pair of connected devices is included once in the input file. All connections are bidirectional. You may assume that all devices in the university network are in the same connected component of devices.\n ---OUTPUT--- \nFor each test case, output one line containing either YES if the plan is allowed to be executed or NO if the plan is not allowed to be executed.\n ---Examples--- \n\n Sample Input 1: \n2\n6\n132.229.123.1 132.229.123.2\n132.229.123.2 132.229.123.3\n132.229.123.3 132.229.123.4\n132.229.123.4 132.229.123.5\n132.229.123.5 132.229.123.6\n132.229.123.6 xxxxx\n7\na b\nb c\nc d\nd e\ne f\nf g\ng h\n\n Sample Output 1: \nYES\nNO" },
    {"problem_name": "Screamers in the Storm", "url": "https://open.kattis.com/problems/screamersinthestorm?tab=metadata" ,"difficulty": "4.8 Medium", "description": "On Mars, though its atmosphere is very thin, winds can blow with unexpected force. The effect can grow even stronger in narrow and deep canyons close to the equator. The floor of one of these canyons is extremely flat and it is used for transport because its steep walls provide partial shielding from cosmic radiation. Over the time, sand has accumulated in the canyon. It is blown by the wind into sizeable sand dunes which obstruct the transport. The dunes form one long string of dunes stretched along the canyon floor.\nThe arrangement of the dunes is not stable. Raging sand storms often remodel the dunes into a different string. Violent movement of sand masses in the storm produce an eerie sound for which the dunes are known as “Screamers in the storm”.\nDetailed measurements of the dunes revealed that the height of adjacent dunes, expressed in Martian meters, is always a small positive integer. Moreover, probably due to wind interference effects in the canyon, the heights of two adjacent dunes are different, unless they are both 1.\nIn fact, the heights of two adjacent dunes are always relatively prime, that is, they share no common factor bigger than 1.\nTo model the dunes behavior, the number of all possible configurations of the dunes in the string has to be established.\n ---INPUT--- \n The input contains one line with two integers K, N (1 <= K <= 66, 1 <= N <= 10^18), the maximum possible height of a dune and the number of dunes in the string of dunes.\n ---OUTPUT--- \nPrint the number of different strings of dunes. Output the result modulo 10^9 + 7.\n ---Examples--- \n\n Sample Input 1: \n3 4\n\n Sample Output 1: \n41\n\n Sample Input 2: \n2 4\n\n Sample Output 2: \n8\n\n Sample Input 3: \n42 75097099101114\n\n Sample Output 3: \n673977658" },
    {"problem_name": "Ferry Loading III", "url": "https://open.kattis.com/problems/ferryloading3?tab=metadata" ,"difficulty": "4.9 Medium", "description": "Before bridges were common, ferries were used to transport cars across rivers. River ferries, unlike their larger cousins, run on a guide line and are powered by the river’s current. Cars drive onto the ferry from one end, the ferry crosses the river, and the cars exit from the other end of the ferry.\nThere is a ferry across the river that can take n cars across the river in t minutes and return in t minutes. A car may arrive at either river bank to be transported by the ferry to the opposite bank. The ferry travels continuously back and forth between the banks so long it is carrying a car or there is at least one car waiting at either bank. Whenever the ferry arrives at one of the banks, it unloads its cargo and loads up to n cars that are waiting to cross. If there are more than n, those that have been waiting the longest are loaded. If there are no cars waiting on either bank, the ferry waits until one arrives, loads it (if it arrives on the same bank of the ferry), and crosses the river. At what time does each car reach the other side of the river?\n ---INPUT--- \n The first line of input contains c, the number of test cases. Each test case begins with n, t, m. m lines follow, each giving the arrival time for a car (in minutes since the beginning of the day), and the bank at which the car arrives (\"left\" or \"right\").\nYou may assume that 0 < n,t,m <= 10000. The arrival times for each test case are non-decreasing. The ferry is initially on the left bank. Loading and unloading time may be considered to be 0.\n ---OUTPUT--- \nFor each test case, output one line per car, in the same order as the input, giving the time at which that car is unloaded at the opposite bank. Output an empty line between cases.\n ---Examples--- \n\n Sample Input 1: \n2\n2 10 10\n0 left\n10 left\n20 left\n30 left\n40 left\n50 left\n60 left\n70 left\n80 left\n90 left\n2 10 3\n10 right\n25 left\n40 left\n\n Sample Output 1: \n10\n30\n30\n50\n50\n70\n70\n90\n90\n110\n\n30\n40\n60" },
    {"problem_name": "A Classy Problem", "url": "https://open.kattis.com/problems/classy?tab=metadata" ,"difficulty": "4.9 Medium", "description": "In his memoir “So, Anyway”, comedian John Cleese writes of the class difference between his father (who was “middle-middle-middle-lower-middle class” and his mother (who was “upper-upper-lower-middle class”). These fine distinctions between classes tend to confuse North American readers, so you are to write a program to sort a group of people by their classes to show their true place in the social class hierarchy.\nFor this problem, there are three main classes: upper, middle, and lower. Obviously, the highest is upper and the lowest is lower. But there can be distinctions within a class, so upper-upper is a higher class than middle-upper, which is higher than lower-upper. However, all of the upper classes (upper-upper, middle-upper, and lower-upper) are higher than any of the middle classes.\nWithin a class like middle-upper, there can be further distinctions as well, leading to classes like lower-middle-upper-middle-upper. When comparing classes, once you have reached the lowest level of detail, you should assume that all further classes are the same as the middle level of the previous level of detail. So upper class and middle-upper class are equivalent, as are middle-middle-lower-middle and lower-middle.\n ---INPUT--- \n The first line of input contains a single positive integer T (T <= 500) indicating the number of cases to follow. Each case starts with a positive integer n (n <= 100) on a line indicating the number of people to consider. Each of the next n lines contains the name of a person followed by a colon and a space, followed by the class of the person. The name contains up to 30 lowercase characters. The class is a string consisting of a nonempty sequence of up to 10 of the words upper, middle, lower separated by hyphens (-), followed by a space, followed by the word class. No two people will have the same name in a single case.\n ---OUTPUT--- \nFor each test case, print the list of names from highest to lowest class. If two people have the same or equivalent classes, they should be listed in alphabetical order by name. Output a line of 30 equal signs (=) after each case.\n ---Examples--- \n\n Sample Input 1: \n1\n5\nmom: upper-upper-lower-middle class\ndad: middle-middle-middle-lower-middle class\nqueenelizabeth: upper-upper-upper class\nchair: lower-lower class\nunclebob: middle-middle-lower-middle class\n\n Sample Output 1: \nqueenelizabeth\nmom\ndad\nunclebob\nchair\n==============================" }
], 

"hard": [
{"problem_name": "Bribe", "url": "https://open.kattis.com/problems/bribe?tab=metadata" ,"difficulty": "5.6 Hard", "description": "After having done a lot of spying and infiltrating a criminal network, you are now ready to try and dismantle it. This, however, requires the cooperation of a certain number of the henchmen. This in turn requires money in order to bribe them, but due to budget cuts, you only have a limited amount of money.\nFortunately, you are an excellent judge of character, so for each of the henchmen you are considering to bribe, you know what amount of money they will ask for. Furthermore, you know the probability that they will then successfully convert, as opposed to taking the money and making a run for it. There is no particular rush, so after each attempted conversion you can establish whether it was successful or not, before you move on to someone else. Of course, if it was not successful, then you cannot try to bribe this henchman a second time.\nGiven all this information on the henchmen, the amount of money that you have at your disposal, and the number of henchmen you need to convert, can you work out the probability that this operation will be a success?\n ---INPUT--- \n On the first line one positive number: the number of test cases, at most 100. After that per test case:\n - one line with three space-separated integers n, c and m (1 <= n, c <= 16 and 1 <= m <= 1000): the number of henchmen that are susceptible to bribe, the number you need to convert, and the amount of money that you have, respectively.\n - n lines with two space-separated integers b and p (0 <= b <= 1000 and 0 <= p <= 100): the amount of money you need to bribe each henchman, and the probability (as a percentage) that he will be successfully converted, respectively.\n ---OUTPUT--- \nPer test case:\n - one line with a single floating point number: the probability that you will succeed in converting c henchmen, if you take an optimal approach. This number should be accurate up to 10^-6 relative or absolute precision.\n ---Examples--- \n\n Sample Input 1: \n2\n4 3 1000\n300 40\n300 50\n300 60\n300 70\n4 2 1000\n100 80\n700 50\n400 20\n500 20\n\n Sample Output 1: \n0.21\n0.408" },
{"problem_name": "Classrooms", "url": "https://open.kattis.com/problems/classrooms?tab=metadata", "difficulty": "5.7 Hard", "description":"The new semester is about to begin, and finding classrooms for orientation activities is always a headache.\nThere are k classrooms on campus and n proposed activities that need to be assigned a venue. Every proposed activity has specfic starting time s_i and ending time f_i. Any such an activity should take place at one of the classrooms. Any of the k classrooms is big enough to hold any of the proposed activities, and each classroom can hold at most one activity at any time. No two proposed activities can take place at the same classroom at the same time. Even if two proposed activities overlap momentarily (the ending time of one activity equals the starting time another activity), they cannot be assigned to the same classroom.\nThere are so many proposed activities that there may not be enough classrooms to hold all the activities. It is desirable to have as many activities as possible. At most how many proposed activities can be assigned to the classrooms?\n ---INPUT--- \n - The first line contains two positive integers n and k (1 <= k <= n <= 200000), representing the number of proposed activities and number of classrooms, respectively.\n- The following n lines each contains two positive integers: the ith line among these n lines contains s_i and f_i (1 <= s_i <= f_i <= 10^9), indicating the starting time and ending time of proposed activity i.\n ---OUTPUT--- \n Output an integer indicating the maximum number proposed activities that can be scheduled.\n ---Examples--- \n\n Sample Input 1: \n4 2\n1 4\n2 9\n4 7\n5 8\n Sample Output 1: \n3" },
{"problem_name": "You Be the Judge!", "url": "https://open.kattis.com/problems/youbethejudge?tab=metadata" ,"difficulty": "5.7 Hard", "description": "Congratulations! You are now the judge of a programming contest! You’ve been put in charge of a problem, and since your problem may not have unique correct output, you’ve got to write an output checker for it.\nYour problem is called “Good as Goldbach”, and it’s based on the Goldbach Conjecture (that any positive even integer greater than 3 can be expressed as the sum of two primes). A solving program’s output should have three numbers separated by whitespace: First, a positive even integer greater than 3 and less than or equal to 10^9, and then two (positive) prime numbers which sum to the even number.\nYou must write a checker for this problem. Your checker should take the output of a contestant’s program, and determine whether or not it could possibly be correct. That is, determine if the contestant’s output consists only of three tokens separated by whitespace, the first of which is a positive even integer greater than 3 and less than or equal to 10^9, and the next two are positive prime integers which sum to the first. The integers should be in base ten, with no signs or leading zeros. Any amount of white space anywhere except within an integer, including blank lines, is OK. Any other output, extra characters, missing numbers, etc. should be considered incorrect.\n ---INPUT--- \n The input will consist of from 0 to 1000 lines. Each line consists of from 0 to 100 printable ASCII characters (with codes 32 through 126), or tabs.\n ---OUTPUT--- \nOutput a single integer, which is 1 if the input could possibly be a correct output for the “Good as Goldbach” problem, or 0 if the input could not possibly be a correct output for the “Good as Goldbach” problem.\n ---Examples--- \n\n Sample Input 1: \n10 3 7\n\n Sample Output 1: \n1\n\n Sample Input 2: \n10   3   7\n\n Sample Output 2: \n1\n\n Sample Input 3: \n314\n159 265\n358\n\n Sample Output 3: \n0\n\n Sample Input 4: \n22 19 3\n\n Sample Output 4: \n1\n\n Sample Input 5: \n\n   60\n  \n  29\n  \n      31\n          \n          \n          \n          \n\n Sample Output 5: \n1\n\n Sample Input 6: \nfred!\nsam!\ngeorge!\n\n Sample Output 6: \n0" },
{"problem_name": "Tour Guide", "url": "https://open.kattis.com/problems/tourguide?tab=metadata" ,"difficulty": "5.7 Hard", "description": "You are working as a guide on a tour bus for retired people, and today you have taken your regular Nordic seniors to The Gate of Heavenly Peace. You let them have a lunch break where they could do whatever they like. Now you have to get them back to the bus, but they are all walking in random directions. You try to intersect them, and send them straight back to the bus. Minimize the time before the last person is in the bus. You will always be able to run faster than any of the tour guests, and they walk with constant speed, no matter what you tell them. The seniors walk in straight lines, and the only way of changing their direction is to give them promises of camphor candy. A senior will neither stop at nor enter the bus before given such a promise.\n ---INPUT--- \n There are a number of test cases (at most 10) consisting of: A line with an integer 1 <= n <= 8, the number of people on the tour. A line with an floating point number 1 < v <= 100, your maximum speed (you start in the bus at the origin). Then follow n lines, each containing four floating point numbers x_i y_i v_i a_i,, the starting coordinates (-10^6 <= x_i, y_i <= 10^6), speed (1 <= v_i < 100) and direction (0 <= a_i < 2*pi)) of each of the tour guests.\nThe input is terminated by a case with n=0, which should not be processed. All floating point numbers in the input will be written in standard decimal notation, and have no more than 6 digits.\n ---OUTPUT--- \nFor each test case, print a line with the time it takes before everybody is back in the bus (the origin). Round the answer to the nearest integer. The answer will never be larger than 10^6.\n ---Examples--- \n\n Sample Input 1: \n1\n50.0\n125.0 175.0 25.0 1.96\n3\n100.0\n40.0 25.0 20.0 5.95\n-185.0 195.0 6.0 2.35\n30.0 -80.0 23.0 2.76\n0\n\n Sample Output 1: \n20\n51" },
{"problem_name": "Hot Spot", "url": "https://open.kattis.com/problems/hotspot?tab=metadata" ,"difficulty": "5.8 Hard", "description": "Hot Spot is a single player game played on a 4 by 4 game board. The purpose of the game is to move a red robot from its current location on the board to the top left corner. The game board may also contain green and blue robots. Each square of the game board can be occupied by no more than one robot at any time.\nA robot may move in one of two ways:\n 1. If two robots are adjacent horizontally or vertically (but not diagonally), one of them may jump over the other to the immediately adjacent square, provided that square is empty. For example, if robot A is immediately to the left of robot B, robot A may jump to the square immediately to the right of robot B.\n 2. If three robots are adjacent in a line (again not diagonally), one of them may jump over the other two, provided the destination square is empty. For example, if robot B is immediately to the right of robot A and robot C is immediately to the right of robot B, robot a may jump to the square immediately to the right of robot C.\nEvery jump only changes the positions of the existing robots; robots are never removed from or added to the game board.\nA blue robot is never allowed to be adjacent horizontally or vertically to another blue robot or to the red robot.\nGiven the initial configuration of the game board, determine the minimum number of jumps required to move the red robot into the top left corner.\n ---INPUT--- \n The input specifies the initial position of the board using four lines, each containing four characters. Each character may be either R, indicating the red robot, B, indicating a blue robot, G, indicating a green robot, or a period (.), indicating an empty square.\n ---OUTPUT--- \nOutput a single line containing a single integer, the minimum number of jumps required for the red robot to reach the top left square of the game board.\n ---Examples--- \n\n Sample Input 1: \n.GR.\n....\n....\n....\n\n Sample Output 1: \n1" },
{"problem_name": "Treasure Map", "url": "https://open.kattis.com/problems/treasuremap?tab=metadata" ,"difficulty": "5.8 Hard", "description": "You have come into possession of a pirate map that gives a series of steps to get from your landing place on a desert isle to the spot marked X where the treasure is located. Each step consists of a compass heading and a number of paces.\nAfter spending most of your savings chartering a boat, you arrive at the island and, with the help of your portable GPS receiver, duly execute the instructions on the map. Alas, no treasure! On your return home you are astonished to learn that the pirates had no knowledge of GPS and used a magnetic compass to create the map. The pirates were unaware that their compass pointed to magnetic north rather than true north. The relative angle between magnetic north and true north varies depending where you are on the planet, but you are able to determine that on this particular desert isle, magnetic north is d degrees from true north. How close were you to the spot marked X at any moment while following the map?\n ---INPUT--- \n There are several test cases. Each test case begins with n <= 1000, the number of steps in the map. n lines follow; each consists of one of the 32 named compass points shown at right followed by a number of paces. The last line is a number giving the angle between magnetic north and true north, in degrees. A positive number indicates that magnetic north is to the east of true north; a negative indicates that it is to the west. The magnitude of this angle will not exceed 90 degrees. A line containing 0 follows the input for the last case.\nNote: We use combinations of the letters N, E, S, W, b to abbreviate the names of the compass points. For example, NEbE stands for north-east by east. The 32 points are equally spaced about the compass. Clockwise, they are: N NbE NNE NEbN NE NEbE ENE EbN E EbS ESE SEbE SE SEbS SSE SbE S SbW SSW SWbS SW SWbW WSW WbS W WbN WNW NWbW NW NWbN NNW NbW.\n ---OUTPUT--- \nFor each test case, output a single number, rounded to two decimal places, giving the least distance (in paces) that separated you from the treasure at any point while you were following the map.\n ---Examples--- \n\n Sample Input 1: \n2\nNbE 10\nEbS 10\n90.00\n2\nNbE 10\nEbS 10\n-90.00\n0\n\n Sample Output 1: \n14.14\n10.00" },
{"problem_name": "Godzilla", "url": "https://open.kattis.com/problems/godzilla?tab=metadata" ,"difficulty": "5.9 Hard", "description": "Godzilla is rampaging through Tokyo again. Luckily, the Superior Defender Mech Force (SDMF) has sent its mech units to stop Godzilla’s attack. Mech units are gigantic bipedal robots, usually piloted by Japanese teenagers, that carry weapons of superior destruction. The weapons are so powerful that one hit should neutralize the Godzilla threat.\nThe SDMF faces two challenges. First, the mech units are so big that they cannot walk over any residential sectors, as they would then trample the people of Tokyo. Second, the weapons of the mech units are so powerful that the pilots cannot afford to fire them at Godzilla while there are any residential sectors between the firing mech and Godzilla.\nThe SDMF wants to run some simulations before it faces the Godzilla threat. The simulations are based on a two-dimensional map of the area of Tokyo where Godzilla is running amock. The passing of time happens between rounds, where in each round there are two turns. In the first turn, Godzilla gets to do a move. In the second turn, the mech units are allowed a move. In a single move, Godzilla moves one sector on the map in the directions North, East, South or West.\nGodzilla is lacking in brain matter and has a very predictable movement scheme. First, Godzilla does not move into a sector that he already visited. Each round, on the first turn:\n - It looks for any houses to destroy that are adjacent to him. If the sector adjacent to him is a residential sector, it will move to that sector and destroy the sector. When a residential sector is destroyed, it becomes a ruined sector instead. Godzilla looks around him in the order North, East, South, West. So, it will first look to the North to see whether there is a residential sector. If so, it will move there. Otherwise, he will look East to see if there is a residential sector to destroy, and so on.\n - In the event that there are no residential sectors adjacent to Godzilla, he will try to move North. If that move would move him outside the map or into a sector he already visited, he will instead try to move East. If he cannot move East, he will move South. In the case that he cannot move South, he will try to move West instead. The terrifying presence of a mech will not stop Godzilla from moving into the sector that is occupied by a mech unit. In that case, Godzilla is considered to be in range of the mech unit’s weapons of superior destruction, in the next turn.\n - If Godzilla has no move options left, he will instead start roaring and wail his arms, inflicting no damage to Tokyo city.\n Each round, on the second turn, each mech unit can either stay at its position, or move to an adjacent non-residential sector, or a ruined sector. It cannot move outside the map. When moving, a mech unit moves one sector in one of the directions North, East, South or West. It is allowed to move into the space of another mech unit. At the moment that a mech unit is able to fire its weapons at Godzilla, it will do so on the mech units’ turn. Mech units can move and fire in the same turn. A mech can fire its weapons at Godzilla if there is a straight horizontal or vertical line between the mech and Godzilla, and the line is not obstructed by any residential sectors.\n Given a map of the Tokyo area where Godzilla is rampaging and the starting location of the mechs, determine the minimum number of residential sectors that will be destroyed before Godzilla can be neutralized by a mech unit.\n ---INPUT--- \nThe input starts with a line containing an integer T (1 <= T <= 6), the number of test cases. Then for each test case:\n - One line containing two space-separated integers L (3 <= L <= 1000) and W (3 <= W <= 1000), the length and width of the map of Tokyo in sectors, respectively.\n - W lines, containing L characters each, describing the map of Tokyo. The characters are:\n\t - ‘.’: a non-residential sector;\n\t - ‘R’: a residential sector;\n\t -‘G’: the starting position of Godzilla. This is always a non-residential sector;\n\t -‘M’: the starting position of a mech unit. This is always a non-residential sector.\nThe sector at the top-left corner of the map represents the North-West corner of Tokyo, while the sector at the bottom-right corner of the map represents the South-East corner of Tokyo.\nThe simulation will contain at most 100 mech units.\nIt will always be possible for Godzilla to be neutralized by a mech unit.\n ---OUTPUT--- \nFor each test case, output one line containing a single integer: the minimum number of residential sectors that will be destroyed before Godzilla can be neutralized by a mech unit.\n ---Examples--- \n\n Sample Input 1: \n2\n3 3\nRR.\nG..\nM.R\n7 5\nM...RR.\n...G...\n...RRR.\n.......\n..RR..M\n\n Sample Output 1: \n1\n2" },
{"problem_name": "Political Development", "url": "https://open.kattis.com/problems/politicaldevelopment?tab=metadata" ,"difficulty": "5.9 Hard", "description": "A certain political party with N  members wants to develop some brand new politics. In order to do so, the party plans to make a committee for new political development. Clearly, the best politics is developed when all committee members disagree with each other, and when the committee is as large as possible.\nIn order to figure out which pairs of politicians disagree and which don’t, the party then arranged for every possible pair of politicians to discuss a randomly selected topic. Whenever two politicians couldn’t agree on their assigned topic, this was recorded in the party’s Book of Great Achievements.\nArmed with this book, you have now been assigned the task of finding the largest comittee where everyone disagrees. However, finding a large comittee can prove challenging; careful analysis have revealed that for any non-empty group of party members, there is always at least one member of the group who disagrees with (strictly) less than K of the other group members. Obviously, then, the committee can not have more than K members. But is there a choice of committee of this size? Find the size of a largest possible committe such that nobody in that committee agrees.\n ---INPUT--- \n The first line contains two integers, N the number of members in the party, and K as described above. Each member is indicated by an integer i between 0 and N-1. After the first line follow N lines, one for each politician i, starting with i=0. The line for politician i begins with an integer D_i, and is followed by D_i integers indicating with which other party members the i-th politician disagrees according to the Book of Great Achievements. We always have 0 <= D_i < N <= 50000, and 1 <= K <= 10.\n ---OUTPUT--- \nOutput a single integer, the size of the largest possible comittee.\n ---Examples--- \n\n Sample Input 1: \n5 3\n2 1 2\n3 0 2 3\n3 0 1 4\n2 1 4\n2 2 3\n\n Sample Output 1: \n3\n\n Sample Input 2: \n5 3\n3 1 2 4\n1 0\n1 0\n0\n1 0\n\n Sample Output 2: \n2" },
{"problem_name": "Introspective Caching", "url": "https://open.kattis.com/problems/caching?tab=metadata" ,"difficulty": "6.0 Hard", "description": "In a distributed system, data is never where you need it, and fetching data over a network takes time and consumes bandwidth. The problem can be mitigated by adding a cache, where a node stores some resources locally and if those resources need to be used again, it can simply take them from its cache rather than asking someone else for them.\nHowever, caches have a nasty tendency to fill up, so at some point, objects must be evicted from the cache to make room for new objects. Choosing what object to remove from the cache is not easy and there are several different algorithms to choose from.\nThe marvelous Apes in Computing Machinery have come up with a fantastic new algorithm, the Introspective Caching Algorithm, named after a city of Peru. It consists of some extra hardware (a very small, precognitive monkey) which helps making decisions. Since the monkey can see into the future, she knows exactly what objects will be accessed and in what order, and using this information she will make optimal decisions on what objects to remove from the cache. Optimality here means that she will minimize the number of times an object is read into the cache.\nAll object accesses go through the cache, so every time an object is accessed, it must be inserted into the cache if it was not already there. All objects are of equal size, and no writes occur in the system, so a cached object is always valid. When the system starts, the cache is empty.\nYou have been tasked with evaluating the monkey’s performance, and feeding her the occasional banana.\n ---INPUT--- \nThe first line of input contains three integers, separated by single spaces, telling you how many objects fit in the cache, 0 < c <= 10000, how many different objects are in the system, c <= n <= 100000, and how many accesses, 0 <= a <= 100000, will occur. The following a lines contain a single integer between 0 and n-1 (inclusive) indicating what object is accessed. The first line corresponds to the first object accessed access and the last line to the last.\n ---OUTPUT--- \nOutput the least number of times an object must be read into the cache to handle the accesses listed in the input.\n ---Examples--- \n\n Sample Input 1: \n1 2 3\n0\n0\n1\n\n Sample Output 1: \n2\n\n Sample Input 2: \n3 4 8\n0\n1\n2\n3\n3\n2\n1\n0\n\n Sample Output 2: \n5" },
{"problem_name": "Forever Young", "url": "https://open.kattis.com/problems/foreveryoung?tab=metadata" ,"difficulty": "6.1 Hard", "description": "My birthday is coming up. Alas, I am getting old and would like to feel young again. Fortunately, I have come up with an excellent way of feeling younger: if I write my age as a number in an appropriately chosen base b, then it appears to be smaller. For instance, suppose my age in base 10 is 32. Written in base 16 it is only 20!\nHowever, I cannot choose an arbitrary base when doing this. If my age written in base b contains digits other than 0 to 9, then it will be obvious that I am cheating, which defeats the purpose. In addition, if my age written in base b is too small then it would again be obvious that I am cheating.\nGiven my age y and a lower bound l on how small I want my age to appear, find the largest base b such that y written in base b contains only decimal digits, and is at least l when interpreted as a number in base 10.\n ---INPUT--- \nThe input consists of a single line containing two base 10 integers y (10 <= y <= 10^{18}  – yes, I am very old) and l (10 <= l <=y).\n ---OUTPUT--- \nDisplay the largest base b as described above.\n ---Examples--- \n\n Sample Input 1: \n32 20\n\n Sample Output 1: \n16\n\n Sample Input 2: \n2016 100\n\n Sample Output 2: \n42" },
{"problem_name": "Deceptive Directions", "url": "https://open.kattis.com/problems/deceptivedirections?tab=metadata" ,"difficulty": "6.2 Hard", "description": "You find yourself on a remote island, searching for a legendary lost treasure. However, despite having gotten your hands on directions leading straight to the treasure, you have a problem. It turns out you have a saboteur in your expedition, and that at some point they edited the precious directions so they might no longer lead to the treasure.\n The island can be viewed as a rectangular grid, and the instructions are a sequence of east/west/north/south steps to take in this grid, from a given starting position. These instructions lead straight to the treasure (but may involve walking around obstacles) in the sense that there is no shorter way of reaching the treasure. However, the saboteur has arbitrarily replaced each step of the instructions by a step in one of the other three directions. In other words, any “west” step has been replaced by “east”, “north” or “south”. This replacement has been done independently for each step, so one “west” may have been replaced by “north” and another by “south”, and so on.\n Because of this sabotage, the instructions seem pretty useless. But maybe they can still be used to narrow down the search. Write a program to find all possible locations of the treasure.\n ---INPUT--- \n The first line of input consists of two integers w and h (3 <= w, h <= 1000)), the width and height of the map. Then follow h lines, each containing w characters, describing the map. Each such character is either a ‘.’ symbolizing a walkable space, ‘#’ symbolizing an obstacle such as a body of water, dense forest, or a mountain, or ‘S’ symbolizing the starting point of the directions.\n Finally, there is a line containing a string I ( 1 <= |I| <= 10^5) consisting only of the characters ‘NWSE’, giving the faulty instruction sequence.\nThe map has exactly one ‘S’ and its boundary consists only of obstacle cells. The faulty instruction sequence is such that there is at least one possible location of the treasure.\n ---OUTPUT--- \nOutput the map in the same format as the input (without the first line specifying the dimensions), with all possible locations of the treasure indicated by exclamation marks (‘!’).\n ---Examples--- \n\n Sample Input 1: \n5 5\n#####\n#...#\n#.S.#\n#...#\n#####\nN\n\n Sample Output 1: \n#####\n#...#\n#!S!#\n#.!.#\n#####\n\n Sample Input 2: \n7 5\n#######\n#..#..#\n#..S..#\n#..#..#\n#######\nESS\n\n Sample Output 2: \n#######\n#!.#..#\n#..S..#\n#..#..#\n#######" },
{"problem_name": "EvenOdd", "url": "https://open.kattis.com/problems/evenodd?tab=metadata" ,"difficulty": "6.3 Hard", "description": "Consider the following function f(X), which takes a single positive integer as argument, and returns an integer.\n\nfunction f(X):\n    iterations := 0\n    while X is not 1:\n        if X is even:\n            divide X by 2\n        else:\n            add 1 to X\n        add 1 to iterations\n    return iterations\n\nIt can be shown that for any positive integer X, this function terminates. Given an interval [L,R], compute the sum\n S = f(L) + f(L+1) + ... + f(R-1) + f(R).\n ---INPUT--- \n The first and only line of input contains two integers L and R (1 <= L <= R <= 10^18).\n ---OUTPUT--- \n Output the result S modulo the prime 10^9 + 7\n ---Examples--- \n\n Sample Input 1: \n1 127\n\n Sample Output 1: \n1083\n\n Sample Input 2: \n74 74\n\n Sample Output 2: \n11" },
{"problem_name": "Bilateral Projects", "url": "https://open.kattis.com/problems/bilateral?tab=metadata" ,"difficulty": "6.4 Hard", "description": "A friend of yours works at an undisclosed company in the music streaming industry, and needs your help. The company has offices in Stockholm and London, and collaboration between the two offices is extensive. The situation is that each of the many but small projects are handled by a two-person team with a member in each city. While emails, faxes, and phones are wonderful, and work well within each team, the CEO wants a briefing every year on the projects. For this purpose the CEO invites representatives from the projects to Barbados for a week of beach fun presentations of all the projects.\nHowever, money is tight and a new policy has been created: the CEO wants at least one person from each project, and additionally, she wants to invite as few people as possible. This is where you come in. In order to help your friend get a ticket to Barbados, you are to write a program that, given all the two-person teams, computes the smallest number of people that must be invited in order to get at least one person from each project, as well as a list of people to invite. If possible (subject to the set of people being smallest possible), the list of invitees should include your friend.\n ---INPUT--- \n The first line of input contains an integer 1 <= m <= 10000, the number of teams. The following m lines each contain two integers, i,j separated by a space, being the employee IDs of the two employees in that team (the first one is from Stockholm and the second one is from London). Stockholm employees have IDs in the range 1000 to 1999 and London employees have IDs in the range 2000 to 2999.. An employee can be a member of several teams, but there cannot be several teams consisting of the same pair of employees. Your friend has ID 1009.\n ---OUTPUT--- \n Output first a single line with an integer k indicating the smallest number of employees that must be invited to meet the requirements above. Then output k lines giving the IDs of employees to invite. If possible (subject to k being smallest possible), the list should contain your friend.\n If there are several solutions subject to these constraints, anyone is acceptable.\n ---Examples--- \n\n Sample Input 1: \n2\n1009 2011\n1017 2011\n\n Sample Output 1: \n1\n2011\n\n Sample Input 2: \n4\n1009 2000\n1009 2001\n1002 2002\n1003 2002\n\n Sample Output 2: \n2\n2002\n1009" },
{"problem_name": "Typo", "url": "https://open.kattis.com/problems/typo?tab=metadata" ,"difficulty": "6.5 Hard", "description": "It is now far into the future and human civilization is ancient history. Archaeologists from a distant planet have recently discovered Earth. Among many other things, they want to decipher the English language.\nThey have collected many printed documents to form a dictionary, but are aware that sometimes words are not spelled correctly (typos are a universal problem). They want to classify each word in the dictionary as either correct or a typo. Naïvely, they do this using a simple rule: a typo is any word in the dictionary such that deleting a single character from that word produces another word in the dictionary.\nHelp these alien archaeologists out! Given a dictionary of words, determine which words are typos. That is, which words result in another word in the dictionary after deleting a single character.\nFor example if our dictionary is {hoose, hose, nose, noises}. Then hoose is a typo because we can obtain hose by deleting a single ’o’ from hoose. But noises is not a typo because deleting any single character does not result in another word in the dictionary.\nHowever, if our dictionary is {hoose, hose, nose, noises, noise} then the typos are hoose, noises, and noise.\n ---INPUT--- \n The first line of input contains a single integer n, indicating the number of words in the dictionary.\nThe next n lines describe the dictionary. The i’th of which contains the i’th word in the dictionary. Each word consists only of lowercase English letters. All words are unique.\nThe total length of all strings is at most 1000000.\n ---OUTPUT--- \nDisplay the words that are typos in the dictionary. These should be output in the same order they appear in the input. If there are no typos, simply display the phrase NO TYPOS.\n ---Examples--- \n\n Sample Input 1: \n5\nhoose\nhose\nnose\nnoises\nnoise\n\n Sample Output 1: \nhoose\nnoises\nnoise\n\n Sample Input 2: \n4\nhose\nhoose\noose\nmoose\n\n Sample Output 2: \nhoose\nmoose\n\n Sample Input 3: \n5\nbanana\nbananana\nbannanaa\norange\norangers\n\n Sample Output 3: \nNO TYPOS" },
{"problem_name": "Galactic Warlords", "url": "https://open.kattis.com/problems/galactic?tab=metadata" ,"difficulty": "6.8 Hard", "description": "Will the galaxy see peace at last? All the warlords have gathered to divide all of space between themselves. The negotiations have come quite far and the warlords have finally agreed on a peaceful way of deciding who gets what. The 2-dimensional galactic map must first be divided into sectors by splitting it along a set of infinite lines. The warlord with the largest battle fleet will choose one sector, then the warlord with the second largest fleet will choose some other sector and so on, until everyone has gotten a sector. This is then repeated until there are no sectors left.\nDifferent sets of lines have been suggested, and it is up to you to present these alternatives to the meeting. To make sure that there will be peace, you are ready to modify the suggestions slightly. You have some experience with warlords and know that no warlord will settle for less space than anyone else, so for there to be peace, all of them must get the exact same area on the map. Since space is infinite, so is the map. Some sectors therefore have infinite area, so that is the amount of space everyone wants. How many extra lines do you have to add to make sure each warlord can get at least one sector with infinite area?\n ---INPUT--- \n The first line of input contains two positive integers W and N, (1 <= W, N <= 100) denoting the number of warlords and the number of lines in the suggested division of space. This is followed by N lines each containing four integers x_1, y_1, x_2 and y_2, each with an absolute value no higher than 10000. This means that one line is intersecting the two points (x_1,y_1) and (x_2,y_2) on the galactic map. These two points are not be the same.\n ---OUTPUT--- \nOutput the number of lines you have to add to this suggestion to satisfy all warlords.\n ---Examples--- \n\n Sample Input 1: \n2 1\n1 1 -2 0\n\n Sample Output 1: \n0\n\n Sample Input 2: \n5 3\n0 5 5 5\n0 0 1 1\n2 2 3 3\n\n Sample Output 2: \n1" },
{"problem_name": "Auto Completion", "url": "https://open.kattis.com/problems/autocompletion", "difficulty": "6.8 Hard", "description": "You are creating an awesome web application for this year’s hackNY hackathon. Everything goes well except that the search box in your application (which is a native HTML input tag) appears a little clumsy given that the user always has to type everything from scratch. To improve the user experience, your team has decided to add an auto completion feature to the search box. However all other team members are busy. So you are asked to program the auto completion algorithm. \n The auto completion algorithm works based on a pre-defined dictionary of n words. Suppose the search box contains the text w. When the user presses the tab key i times in a row, the algorithm finds the i-th lexicographically smallest word from the dictionary that has w as its non-trivial prefix. If there are fewer than i words that have w as prefix, the algorithm circulates through these words. That is, if there are j < i words that have w as prefix, the (j+1)-th tab press goes back to the lexicographically smallest word, and the (j+2)-th tab press gives the second lexicographically smallest word, and so on. The chosen word then replaces the text in the search box. If there are no words that have w as prefix, pressing the tab has no effect. When the user types a letter, the letter is directly appended to the text.\n For example, suppose the dictionary has four words: “albert”, “app”, “apple”, and “appletree”. If the user types “app” and then presses the tab key twice, she will get “appletree”, which is the second lexicographically smallest word that has “app” as non-trivial prefix. If she presses the tab key three times instead after typing “app”, she will get “apple” by the word circulation design. The user may also obtain “appletree” by first typing “a”, pressing the tab key three times (getting “apple”), typing two letters “tr”, and finally pressing the tab key once.\nYou team has prepared some simulated user keystroke sequences for you to test the auto completion.\n\n ---INPUT--- \nThe first line has a single integer n (1 <= n <= 10^5), the number of words in the dictionary. Each of the next n lines gives a dictionary word. All dictionary words are unique and contain only lowercase English letters. No dictionary word has a length larger than 10^5. The total length of all dictionary words does not exceed 5*10^5.\nThe next line has a single integer q (1 <= q <= 10^5), the number of keystroke sequences. Each of the next q lines has a string that represents a user’s keystroke sequence. A keystroke sequence consists of lowercase English letters and hash signs. Each hash sign denotes one press on the tab key. The total length of all keystroke sequences does not exceed 5 * 10^5. No keystroke sequence starts with a hash sign. It is assumed that the user does not pause between two consecutive tab presses, so that a sequence of consecutive tab presses triggers the auto completion only once.\nIt is guaranteed that the total length of the text produced by all keystroke sequences does not exceed 10^6.\n ---OUTPUT--- \nFor each keystroke sequence, output the text it produces on a single line.\n ---Examples--- \n\n Sample Input 1: \n\n6\napp\napple\nappletree\nalbert\navoid\nbanana\n11\na#\na##\na####\na#######\napp#\napplet#\na#####tle#\nab#andon\napp#t#\nb##s#\ncat\n\n Sample Output 1: \n\nalbert\napp\nappletree\napp\napple\nappletree\navoidtle\nabandon\nappletree\nbananas\ncat"},
{"problem_name": "Shakespeare, who?", "url": "https://open.kattis.com/problems/shakespearewho?tab=metadata" ,"difficulty": "7.0 Hard", "description": "You would like to write a very special poem for your friend. You know a list of n words that your friend likes. We will call these words beautiful words. You want every line of your poem to begin and end with a beautiful word. Any given line must use the same beautiful word at the beginning and end of the line, but different lines can use different beautiful words. You do not care about the other words in any line (just the first and last!).\nYour friend thinks your poem is beautiful every time some prefix of the first word in a line matches a suffix of the last word of the previous line. Further, your friend hates it if they see the same beautiful word in two consecutive lines, or if the first word of a line and the last word of the previous line share no common prefix/suffix. So you will ensure that your poem doesn’t have such lines.\nMore precisely, you can define the Shakespearian index of a line i (i >=2) to be the length of the longest prefix of the first word of line i that is also a suffix of the last word of line i-1. The Shakespearian index of the first line will always be 0. The beauty of the poem is defined as the sum of the Shakespearian indexes of all the lines in the poem.\nWhat is the most beautiful poem you can write?\n ---INPUT--- \n The first line of the input contains a single integer n, (1 <= n <= 500).\nThe next n lines each contain a distinct beautiful string, which is a word that only contains lowercase English letters a-z. The length of each beautiful string is at most 2000.\n ---OUTPUT--- \nPrint a single integer that is the beauty value of the most beautiful poem you can write. If you can write an infinitely beautiful poem, print “Shakespeare, who?”.\n ---Examples--- \n\n ---Sample Explanation--- \nFor the first sample, one possible maximally beautiful poem (ignore punctuation) is\nelephant, oh mighty elephant,\nanteater, oh hungry anteater,\nraccoon, oh poor raccoon!\n Sample Input 1: \n3\nraccoon\nelephant\nanteater\n\n Sample Output 1: \n4\n\n Sample Input 2: \n2\ntractor\ntorrent\n\n Sample Output 2: \nShakespeare, who?" },
{"problem_name": "Domine", "url": "https://open.kattis.com/problems/domine?tab=metadata" ,"difficulty": "7.1 Hard", "description": "Mirko has a chessboard with N rows and just three columns. Slavica has written an integer on each field. Mirko has K dominoes at his disposal, their dimensions being 2 * 1, and has to arrange all of them on the board without overlapping, in a way that each domino covers exactly two fields of the board. He can rotate the dominoes as he please\nHelp Mirko cover the largest sum of numbers possible with the dominoes!\n ---INPUT--- \n The first line of input contains the integer N (1 <= N <= 1000), the number of rows, and K (1 <= K <= 1000), the number of dominoes available.\nEach of the following N lines contains three integers written in the i’th row of the board. All numbers will be less than 10^6 in absolute value.\n ---OUTPUT--- \nThe first and only line of output must contain the maximal sum possible to cover with exactly K dominoes.\n ---Examples--- \n\n Sample Input 1: \n5 3\n2 1 -1\n1 3 2\n0 2 3\n2 1 1\n3 3 0\n\n Sample Output 1: \n16\n\n Sample Input 2: \n2 2\n0 4 1\n3 5 1\n\n Sample Output 2: \n13" },
{"problem_name": "Lights Out", "url": "https://open.kattis.com/problems/lightsout?tab=metadata" ,"difficulty": "7.2 Hard", "description": "Poor Eve, she is almost always the last one at work. Most unfortunately, she is very afraid of the dark, and the company rules dictates the last one leaving the office is obliged to make sure all the lamps at the whole office are off. Her sloppy colleagues sometimes forget to turn their lamps off, more often then not to be honest, but to be fair it is not as trivial as you might think. You see, at Eve’s workplace, each room has exactly one lamp but may have several light switches. The thing is though, that unlike a traditional light switch, these switches toggle a subset of all the lamps at the office. Each switch inverts the light status, either from lit to turned off or the other way around, for a fixed set of lamps depending on the switch. It may even be that the lamp in the room is not effected by any of its switches, or that there are no switches in the room at all.\nEve is a creature of habit and wants to take a fixed route out of the office each evening. At the same time, the set of lamps to turn off may be different on different days, so she has to plan for all eventualities. In other words, Eve wants a route through the office such that, for any possible configuration of the lamps, there is some combination of the light switches in the rooms Eve moves through that will allow her to turn off that configuration of lamps.\nNote that it may be the case that some configurations of lamps are impossible to turn off (for instance, in Sample Input 1, it would be impossible to turn off only lamp 0), but Eve doesn’t have to worry about such configurations of lamps (because they are also impossible to turn on). The route only has to let her turn off configurations which are actually possible to turn off. Eve is fine with passing through a room even if its lamp is turned off, for instance it is OK if the last lamp in the office is turned off somewhere in the middle of the route even though it means walking through a few unlit rooms at the end.\n ---INPUT--- \n The first line of input contains three positive integers, n, m and l (2 <= n <= 20, 1 <= m <= 190, 1 <= l <= 100), where n is the number of rooms in the office, m is the number of connections between rooms, and l is the number of switches. Next follow m lines, each describing a pair of adjacent rooms containing two room numbers a!=b, meaning you can enter room b from room a and vice versa. No unordered pair {a,b} appears more than once.\nThen follow l lines, each describing a light switch. Each such line starts with a room number telling which room the light switch is in. The second integer on the line p > 0 gives the number of lamps that are toggled by the switch. The remainder of the line contains p room numbers. You can assume that no two room identifiers are identical in a switch’s toggle list.\nThe rooms are numbered 0 through n-1. The room from which Eve leave’s the office is number 0, and Eve’s room (where she starts) is number 1. You may assume that it is possible to reach any room from room 1.\n ---OUTPUT--- \nOutput one line with the minimum number of rooms on a path from Eve’s room to the entrance room (counting both endpoints) including a set of switches making it possible to turn off any possible subset of lamps lit. Note that she might need to visit a room multiple times, in which case each visit should be counted.\n ---Examples--- \n\n Sample Input 1: \n6 5 7\n0 2\n2 3\n3 4\n3 5\n1 2\n1 2 0 1\n1 2 1 2\n2 2 2 3\n3 2 3 4\n4 2 4 5\n4 2 0 5\n5 2 0 3\n\n Sample Output 1: \n7" },
{"problem_name": "Citadel Construction", "url": "https://open.kattis.com/problems/citadelconstruction?tab=metadata" ,"difficulty": "7.3 Hard", "description": "The army wants to put up a new base in dangerous territory. The base will be surrounded by a citadel consisting of a number of straight walls. At every corner where two walls meet, there will be a watchtower. In order to enable efficient coordination in case of attack, the number of watchtowers should not exceed four.\nAfter a detailed survey of the area, the army has concluded that not all locations are equally suitable for a watchtower: the ground needs to be firm enough to support the weight of the tower, and there should be enough visibility. They have selected a number of locations that meet the requirements.\nWithin these constraints, the army would like to build a base that is as large as possible. For this, they have come to you for help. Since the results of the survey are of course classified, you will not be given the possible locations directly; rather, you should write a program that can take them as input. Furthermore, they want the program to be able to handle multiple test cases in one go, so that they can hide the real data among lots of fake data.\nFor the computation of the area, you may assume that the watchtowers are infinitesimal in size and the walls infinitesimal in width.\n ---INPUT--- \n On the first line one positive number: the number of test cases, at most 100. After that per test case:\n - one line with a single integer n (3 <= n <= 1000): the number of locations that are suitable for a watchtower.\n - n lines, each with two space-separated integers x and y (-10000 <= x,y <= 10000): the coordinates of each location.\nAll locations are distinct.\n ---OUTPUT--- \nPer test case:\n - one line with a single number: the largest possible area that the base can have. This number will be either an integer or a half-integer. If it is an integer, print that integer; if it is a half-integer, print the integer part followed by “.5”. Trailing zeros are not allowed.\n ---Examples--- \n\n Sample Input 1: \n3\n6\n0 0\n3 7\n10 0\n11 6\n0 10\n10 10\n5\n0 0\n-2 -2\n3 -2\n0 1\n0 3\n10\n3 1\n4 1\n5 9\n2 6\n5 3\n5 8\n9 7\n9 3\n2 3\n8 4\n\n Sample Output 1: \n100\n12.5\n31" },
{"problem_name": "Treasure Hunt", "url": "https://open.kattis.com/problems/treasure?tab=metadata" ,"difficulty": "7.5 Hard", "description": "You are a treasure hunter searching for gold in the wild. Luckily you got a map of the area from a black marketeer. The map clearly shows where a box of gold is along with the surrounding terrain. Of course, you want to head to the treasure as fast as possible. However, the trip might not be easy.\nThe area is described by a grid of N rows and M  columns. You are currently located at the cell labeled ‘S’. The treasure is located at the cell labeled ‘G’. Despite your eagerness for the treasure, you cannot keep moving tirelessly. The surrounding area has different landforms: plain (‘.’), forest (‘F’), mountain (‘M’) or river (‘#’). Rivers are impassable since no boats are currently available. You can navigate in four directions (up, down, left, right) between neighboring cells.\nAt the beginning of your trip you have K stamina points. Moving onto a plain, forest, and mountain costs you 1, 2, and 3 points of stamina respectively. Once you run out of stamina and can no longer move to nearby cells, you must camp and rest. Your stamina is replenished to the full K points on the second day so that you can start moving again.\nPlan wisely with the map and determine the minimum number of days you need to reach the treasure.\n ---INPUT--- \n The first line has three integers N, M (1 <= N,M <= 50), and K (1 <= K <= 100). Each of the next N lines has M characters describing the grid shown by the treasure map. The grid contains only characters ‘.’, ‘F’, ‘M’, ‘#’, ‘S’, and ‘G’. It is guaranteed that ‘S’ and ‘G’ appear exactly once in the grid. You may assume your starting point (‘S’) and the treasure (‘G’) are both on a plain.\n ---OUTPUT--- \nOutput the minimum number of days you need to reach the treasure. If it is impossible to get to the treasure, output “-1”.\n ---Examples--- \n\n Sample Input 1: \n2 5 4\nS#.F.\n.MFMG\n\n Sample Output 1: \n3\n\n Sample Input 2: \n1 2 1\nGS\n\n Sample Output 2: \n1\n\n Sample Input 3: \n2 2 10\nS#\n#G\n\n Sample Output 3: \n-1\n\n Sample Input 4: \n1 7 4\nSMMMMMG\n\n Sample Output 4: \n5" },
{"problem_name": "Eco-driving", "url": "https://open.kattis.com/problems/ecodriving?tab=metadata" ,"difficulty": "7.6 Hard", "description": "My colleague Elisabeth is lazy, both at work and when going to work. She never wants to do more than necessary, which also applies to her journey to work. Her goal is to use a minimum amount of energy, which she achieves by braking and accelerating as little as possible. This method applies to all wheel-based transport means she owns.\nElisabeth has earlier optimized her route by trial and error, but now wants your help to find the optimal path. She has provided a map with N junctions and R straight one-way roads between the junctions. If a road is dual way, it is represented as two one-way roads.\nFortunately, Elisabeth often works night shifts, so braking and acceleration are only needed when turning in a junction, as there is no other traffic on the roads. Her goal is to find a route where the maximum turning angle in the junctions is minimized, as this means maximized speed. However, the route can not be too long.\n ---INPUT--- \n The first line of input contains three space separated integers J, R, D (2 <= J <= 200, 1 <= R <= 40000, 1 <= D <= 1000000. J  is the number of junctions, R is the number of one-way roads which are connecting two junctions, and D is the maximum distance, in meters, that Elisabeth wants to travel. The road network is such that there is no path, that Elisabeth may want to use, which has the length L such that D < L < D(1 + 10^-6)\nThen follow J lines with two integers x and y, (-100000 <= x,y <= 100000), the distinct coordinates in meters on a flat ground. Elisabeth lives at junction 1 and her work is at junction J.\nAfter that, R lines follow with two integers a and b. This should be interpreted as the one-way road between the one-indexed source and destination junctions a and b (1 <= a,b <= J).\n ---OUTPUT--- \nOutput one line with the maximum turning angle of the route that thas the maximum turning angle as low as possible. The turning angle must be output in degrees and have an absolute or relative error at most 10^-6. If there is no such route that is short enough, output “Impossible” on a single line.\n ---Examples--- \n\n Sample Input 1: \n5 6 500\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n\n Sample Output 1: \n90.00000000\n\n Sample Input 2: \n5 6 450\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n2 3\n3 4\n3 5\n4 5\n\n Sample Output 2: \n126.86989765\n\n Sample Input 3: \n5 12 440\n-100 0\n-100 100\n0 200\n100 100\n100 0\n1 2\n1 3\n3 1\n2 3\n3 2\n3 4\n4 3\n3 5\n5 3\n4 5\n5 4\n5 1\n\n Sample Output 3: \nImpossible" },
{"problem_name": "Surveillance", "url": "https://open.kattis.com/problems/surveillance2?tab=metadata" ,"difficulty": "7.7 Hard", "description": "You would like to install a single camera somewhere in the interior of a room. The room is described as a polygon with axis-aligned sides. You would like to ensure that the entire area of the room is visible from the camera, modeled as a point that can see in all directions. The complication is that the walls of the room are actually low-quality flat mirrors, such that any part of the room from which light can reach the camera via at most one reflection is visible from the camera (but not two or more reflections). The corners of the room are not reflective.\nGiven a description of the room, determine the square footage of the area in which the camera may be placed satisfying this condition.\n ---INPUT--- \nThe first line of input contains a single integer n (4 <= n <= 6), which is the number of corners in the room.\nEach of the next n lines contains two integers x and y (|x|, |y| <= 1000)). These are the room’s corners, in counter-clockwise order.\nIt is guaranteed that the room’s walls and corners do not intersect each other, and that all of the walls are axis-aligned. All measurements are in feet.\n ---OUTPUT--- \nOutput a single floating point number, which is the square footage of the area in which the camera can be placed such that the camera can see the entire area of the room with at most one reflection from the mirrored walls. This value must be accurate to an absolute or relative error of 10^-6.\n ---Examples--- \n\n Sample Input 1: \n6\n0 0\n10 0\n10 6\n4 6\n4 10\n0 10\n\n Sample Output 1: \n58.666666666666664" },
{"problem_name": "Classical Counting", "url": "https://open.kattis.com/problems/classicalcounting?tab=metadata" ,"difficulty": "7.9 Hard", "description": "You have N objects, each with M copies. How many ways are there to take exactly K of them?\nTwo selections of size K are considered different if the K-tuples for those selections are different. So, for example if N = M = K = 3 (as in the second sample input), and the N = 3 types of objects are labeled A, B, and C, then the tuple (A,B,B) is different than (B,A,B).\n ---INPUT--- \n The first line of input contains three integers, N, M and K respectively, subjected to 1 <= N, M, K <= 10^5.\n ---OUTPUT--- \nOutput the number of ways. As the number of ways could be large, output them modulo 10^6+7\n ---Examples--- \n\n Sample Input 1: \n10 1 2\n\n Sample Output 1: \n45\n\n Sample Input 2: \n3 3 3\n\n Sample Output 2: \n10\n\n Sample Input 3: \n3 2 7\n\n Sample Output 3: \n0" },
{"problem_name": "Perfect k-ary Tree", "url": "https://open.kattis.com/problems/perfecttree?tab=metadata" ,"difficulty": "8.0 Hard", "description": "A graph G is given, which is a tree with N nodes. The nodes are labelled 1,2,...,N. Count the number of subgraphs of G which is a perfect k-ary tree. An unrooted tree is called a perfect k-ary tree if it is possible to root the tree such that (1) every non-leaf node has exactly k children and (2) the distance between the root and a leaf is the same for all leaves.\nFor example, the graph in Sample Input contains 6 perfect binary (2-ary) trees, namely {1}, {2}, {3}, {1,2,3}, {2,3,4}.\nSince the answer may be too large, output it modulo 1000000007 (10^9+7).\n ---INPUT--- \n The first line of input consists of two integers N and k (1 <= N <= 100000, 2 <= k <= 5). The following N-1 lines each contain a pair of integers, u_i and v_i (1 <= u_i, v_i <= N), meaning that there is an edge directly connecting nodes u_i and v_i. It is guaranteed that the given graph is a tree.\n ---OUTPUT--- \nOutput the required answer on one line.\n ---Examples--- \n\n Sample Input 1: \n4 2\n1 2\n2 3\n3 4\n\n Sample Output 1: \n6" },
{"problem_name": "Guess the Numbers", "url": "https://open.kattis.com/problems/guessthenumbers?tab=metadata" ,"difficulty": "8.1 Hard", "description": "John has never been very good at maths. Due to his bad grades, his parents have sent him to the Academic Coalition of Mathematics (ACM). Despite the large amount of money his parents are spending on the ACM, John does not pay much attention during classes. However, today he has begun to think about all the effort his parents are putting into his education, and he has started to feel somewhat…guilty. So he has made a decision: he is going to improve his maths grades!\nHowever, no sooner had he resolved to pay attention than the lesson ended. So the only thing he has been able to do is to hurriedly copy the content of the blackboard in his notebook. Today, the teacher was explaining basic arithmetic expressions with unknowns. He vaguely remembers that his classmates have been substituting values into the unknowns to obtain the expressions’ results. However, in all the hurry, John has only written down expressions, values and results in a messy fashion. So he does not know which value comes with each unknown, or which result goes with each expression.\nThat is the reason he needs your help: he wants to know, given an expression, some values and a result, whether it is possible or not to assign those values to the unknowns in order for the expression to evaluate to the given result. The particular assignment of values does not matter to John, as he wants to do it by himself. He only wants to know whether it is possible or not.\n ---INPUT--- \nThe input contains at most 4000 testcases. Each test case in the input file consists of two lines:\n - The first line contains a sequence of natural numbers. The first one (1 <= n <= 5) is the number of unknowns that will occur in the expression. It is followed by a sequence of n integers v_1, ..., v_n (0 <= v_i <= 50), which are the values to be assigned to the unknowns. Finally, there is an integer m (0 <= m <= 1000) representing the desired result of the evaluation of the expression.\n - The second line contains an arithmetic expression composed of lowercase letters (a-z), brackets (( and )) and binary operators (+, -, *). This expression will contain n unknowns, represented by n different lowercase letters, without repetitions. The expression will not contain any blanks and will always be syntactically correct, i.e. it is just an unknown or has the form (e_1 op e_2), where e_1 and e_2 are expressions and op is one of the three possible binary operators.\nThe input will finish with a dummy test case of just one line containing 0 0, which must not be processed.\n ---OUTPUT--- \nFor each test case, print a single line with YES if there exists an assignment of the values v_1,...,v_n to the unknowns such that the expression evaluates to m, and NO otherwise. Notice that each value v_i must be assigned to exactly one unknown.\n ---Examples--- \n\n Sample Input 1: \n3 2 3 4 14\n((a+b)*c)\n2 4 3 11\n(a-b)\n1 2 2\na\n0 0\n\n Sample Output 1: \nYES\nNO\nYES" },
{"problem_name": "As Easy as CAB", "url": "https://open.kattis.com/problems/easyascab?tab=metadata" ,"difficulty": "8.2 Hard", "description": "We all know how to alphabetize a list of distinct words when you know the alphabet: One word may be a prefix of another longer word, in which case the shorter word always comes before the longer word. With any other two words there must be a first place in the words where their letters differ. Then the order of the words is determined by the lexicographical order of these first differing letters.\nHow about the reverse problem: Can you find the lexicographic order of the alphabet from an ordered list of words? Suppose an alphabet exists where the following list of word strings is given in lexicographical order:\n\ncab\ncda\nccc\nbadca\n\nIt is clear that c comes before b in the underlying alphabet because cab comes before badca. Similarly, we know a comes before d, because cab < cda, a comes before c because cab < ccc, and d comes before c because cda < ccc. The only ordering of the 4 alphabet characters that is possible is adcb.\nHowever, it may be that a list contains inconsistencies that make it impossible to be ordered under any proposed alphabet. For example, in the following list it must be that a comes before b in the alphabet since abc < bca, yet it also must be that b comes before a in the alphabet since bca < aca.\n\nabc\nbca\ncab\naca\n\nFinally, some lists may not provide enough clues to derive a unique alphabet order, such as the following:\n\n\ndea\ncfb\n\nIn this list, d comes before c but we don’t know about the relative positions of any of the other letters, so we are unable to uniquely discern the order of the alphabet characters.\n ---INPUT--- \n The first line of input will contain L and N, separated by a space, where L is a lowercase character b <= L <= z representing the highest character in the English alphabet that appears in the derived alphabet, and N is an integer 1 <= N <= 1000 that is equal to the number of strings in the list. Each of the next N lines will contain a single nonempty string of length at most 1000, consisting only of characters in the derived alphabet. No two strings will be the same. \n ---OUTPUT--- \nIf the input is consistent with a unique ordering of the alphabet, output a string that designates that ordered alphabet. If the data is inconsistent with any ordering, output IMPOSSIBLE. If the data is consistent with multiple orderings, output AMBIGUOUS.\n ---Examples--- \n\n Sample Input 1: \nd 4\ncab\ncda\nccc\nbadca\n\n Sample Output 1: \nadcb\n\n Sample Input 2: \nc 4\nabc\nbca\ncab\naca\n\n Sample Output 2: \nIMPOSSIBLE\n\n Sample Input 3: \nf 2\ndea\ncfb\n\n Sample Output 3: \nAMBIGUOUS\n\n Sample Input 4: \ne 5\nebbce\ndbe\nadcd\nbc\ncd\n\n Sample Output 4: \nedabc" },
{"problem_name": "Catmas Gifts", "url": "https://open.kattis.com/problems/catmasgifts?tab=metadata" ,"difficulty": "8.3 Hard", "description": "It is Catmas time again, and that means a lot of stress for everyone. In the Kattis family everyone used to buy gifts for everyone else, but this becomes more and more expensive every year, since our family keeps growing.\nTo make things easier, we decided that this year each person will buy just one gift. We will then put all the gifts in a big bag and choose an order among ourselves, with all orderings being equally likely. Then, in this order, each person picks a gift from the bag, where each gift is chosen with equal probability. If it is their own gift (which they can easily recognize since everyone in the Kattis family is a creative individual making completely unique Catmas gift wrapping), they put it back in the bag and pick another gift. This can take some time, since it might happen that somebody picks their own gift a few times in a row.\nThis strategy is not perfect, because the last person might still end up with their own gift. When this happens, everyone has to put their gifts back in the bag, and then we restart the entire process all over from the beginning. Now the question is, how long will we have to wait until the process ends and we can start opening our Catmas gifts? Specifically, given the size n of our family, what is the expected total number of gifts taken out of the bag until the process ends and everyone has gotten their gift?\n ---INPUT--- \n The input contains one line with one integer n (2 <= n <= 1000) – the current size of the Kattis family.\n ---OUTPUT--- \nOutput the expected total number of gifts taken out of the bag, accurate to within an absolute error of at most 10^-6.\n ---Examples--- \n\n Sample Input 1: \n2\n\n Sample Output 1: \n3.000000000\n\n Sample Input 2: \n3\n\n Sample Output 2: \n5.333333333" },
{"problem_name": "Hilbert's Hedge Maze", "url": "https://open.kattis.com/problems/hilbertshedgemaze?tab=metadata" ,"difficulty": "8.4 Hard", "description": "David has elaborate hedge mazes in his garden. For each of his mazes of different sizes, he wonders how long it would take to walk between any pair of locations in and around that maze. A hedge maze of order n >= 1 is constructed according to very specific instructions:\n 1. Start with S = A.\n 2. Repeat n times: \n\t 1. Create a new string T by replacing each A in S with LBFRAFARFBL and each B with RAFLBFBLFAR.\n\t 2. Set S = T.\n 3. Remova all A’s and all B’s from S\n\nThe resulting string gives the instructions for constructing the hedge maze. In the unbounded plane start at coordinates (0,0), facing towards (1,0) and for every F move forward one unit, for every R turn right 90 degrees, and for every L turn left 90 degrees.\n After constructing the maze, identify position (x,y) with the unit square cell bounded by coordinates (x,y),(x+1,y),(x,y+1),(x+1,y+1). We can move directly between two positions (x_1,y_1),(x_2,y_2) if and only if either |x_1-x_2| = 1 or |y_1-y_2| = 1, but not both, and there is no hedge between these cells. The distance between these two positions is 1.\nGiven a number n and a pair of positions, find the shortest distance between these positions.\n ---INPUT--- \n Input starts with a positive integer k (1 <= k <= 100), denoting the number of test cases. Each of the next k lines consists of 5 integers n, x_1, y_1, x_2, y_2, satisfying 1 <= n <= 50, and -2^{52} <= x_1,y_1,x_2,y_2 >= 2^{52}. There is no interaction between the test cases. Each specifies a single hedge maze situated alone in the unbounded plane.\n ---OUTPUT--- \nOutput k lines with one integer on each line, corresponding to the shortest distance between the two positions in each of the k test cases.\n ---Examples--- \n\n Sample Input 1: \n2\n3 5 3 4 0\n2 4 3 0 2\n\n Sample Output 1: \n16\n11" },
{"problem_name": "Around the track", "url": "https://open.kattis.com/problems/aroundthetrack2?tab=metadata" ,"difficulty": "8.5 Hard", "description": "After The Stig’s identity was revealed, the TV show Top Gear is in dire need of a new, tame racing driver to replace him. And of course you have been asked to take the job. However, you are not very fond of driving quickly, and especially not around the twisting and turning tracks they use in the show. To help you alleviate this problem, one of your algorithmic friends has suggested that you should calculate the roundtrip with the least possible amount of turning required.\nThe driving track consists of unique, straight lines, and there are always exactly 2 or 4 roads heading out from each node. A roundtrip must be an Eulerian circuit, i.e. it must traverse each edge of the graph exactly once, and end up where it started. (Such a circuit is guaranteed to exist in the input graphs.) Thus the total amount of turning is the sum of the turning required at each node, where continuing in a straight line means a turn of 0. The roads on the track can be driven in any direction.\n ---INPUT--- \n One line with 3 <= N <= 10000 – the number of nodes – and N <= M <= 2N – the number of edges.\n N lines with the integer x and y coordinates of each node, in order. 0 <= x,y <= 10000. The nodes have unique coordinate pairs.\n M lines with two space separated integers i and j, denoting an edge between nodes i and j. The nodes are 0-indexed.\n ---OUTPUT--- \nThe least amount of turning you must do to complete an Eulerian circuit, in radians. The answer must be correct within an absolute or relative error of 10^-6\n ---Examples--- \n\n Sample Input 1: \n3 3\n0 0\n0 1\n1 0\n0 1\n0 2\n1 2\n\n Sample Output 1: \n6.283185\n\n Sample Input 2: \n12 19\n2 0\n0 3\n1 7\n8 10\n8 5\n6 3\n10 1\n11 5\n13 3\n12 7\n16 5\n17 9\n0 1\n0 5\n1 5\n1 2\n1 3\n2 3\n3 4\n3 9\n4 5\n4 9\n4 6\n5 6\n6 7\n6 8\n7 8\n8 9\n8 10\n9 11\n10 11\n\n Sample Output 2: \n22.428486" },
{"problem_name": "3D Printer", "url": "https://open.kattis.com/problems/threedprinter?tab=metadata" ,"difficulty": "8.7 Hard", "description": "3D printing is a technique for manufacturing items from a digital template. The printer lays down layers of a polymer material, building an entire 3D object as a series of flat plates of varying shapes, stacked upon one another. The polymer is initially sticky enough so that the plates printed on top of one another will adhere. After the object dries or cures, the resulting objects can be quite durable.\nConsider a 3D printer in which objects to be printed are described as a template, consisting of a combination of several convex polyhedra (i.e., flat-surfaced objects such that a line from one interior point to another interior point never passes outside the volume of the object). Write a program to determine the total volume of polymer required to sculpt an object from a given template.\n ---INPUT--- \n There will be a single test case in the input. This test case will begin with a line with a single integer n (1 <= n <= 100) representing the number of polyhedra in that template.The subsequent lines describe the n polyhedra. Each polyhedron begins with a line containing an integer f (3 < f < 30)), which is the number of faces on the polyhedron. Following that line is a series of lines describing polygons that comprise the faces. Each such line begins with an integer v (3 <= v <= 24), which is the number of vertices. Following v  on the same line will be 3*v real numbers, representing the v vertices as (x,y,z) coordinates. For example, if v=3, then the line would be\n\n    v x1 y1 z1 x2 y2 z2 x3 y3 z3\n\nAll coordinates will be in the range [-100...100]. Vertices are presented in sequential order; there will be an edge of the polygon from (x_1,y_1,z_1) to (x_2,y_2,z_2), from (x_2,y_2,z_2) to (x_3,y_3,z_3), and so on. The polygons are closed, so there is an implied edge from the last vertex in a polygon back to the first. All of the vertices of a face will be coplanar. Edges will not cross, and each vertex will lie on exactly two edges. No three (or more) vertices in a polygon will be collinear. None of the polyhedra will overlap.\n ---OUTPUT--- \nPrint a real number on its own line, indicating the volume of polymer required in cubic centimeters. The volume should be printed with a precision of two decimal places, rounded.\n ---Examples--- \n\n Sample Input 1: \n2\n6\n4 10 10 0 10 15 0 15 15 0 15 10 0\n4 10 10 0 10 15 0 10 15 20 10 10 20\n4 10 15 0 15 15 0 15 15 20 10 15 20\n4 15 15 0 15 10 0 15 10 20 15 15 20\n4 10 10 0 15 10 0 15 10 20 10 10 20\n4 10 10 20 10 15 20 15 15 20 15 10 20\n6\n4 0 0 0 0 25 0 25 25 0 25 0 0\n4 0 0 0 0 25 0 0 25 0.5 0 0 0.5\n4 0 25 0 25 25 0 25 25 0.5 0 25 0.5\n4 25 25 0 25 0 0 25 0 0.5 25 25 0.5\n4 25 0 0 0 0 0 0 0 0.5 25 0 0.5\n4 0 0 0.5 0 25 0.5 25 25 0.5 25 0 0.5\n\n Sample Output 1: \n812.50" },
{"problem_name": "Saskatchewan", "url": "https://open.kattis.com/problems/saskatchewan?tab=metadata" ,"difficulty": "8.9 Hard", "description": "The province of Saskatchewan is surveyed in sections. A section is a square mile of land. Grid roads delimit sections; there is one north-south and one east-west road exactly every mile. (Complications arise because of the curvature of the earth but you can disregard these and assume that the province is a plane.) The provincial border is a polygon whose vertices correspond to the intersections of grid roads. However, the edges do not necessarily follow grid roads; some sections are cut by the border. Your job is to compute how many sections are completely within a province like Saskatchewan.\n ---INPUT--- \n Standard input contains a series of no more than 100 coordinate pairs, one pair per line. These coordinates give the vertices of the perimeter of the province; the border is formed by connecting them in order. All coordinates are in the first quadrant; they are integers and range from 0 to 100000.\n ---OUTPUT--- \nYour output should be a single integer: the number of sections (i.e., unit squares with corners at integer coordinates) fully contained within the province.\n ---Examples--- \n\n Sample Input 1: \n0 0\n0 100000\n99999 100000\n100000 0\n\n Sample Output 1: \n9999900000" },
{"problem_name": "Eccentric Excursion", "url": "https://open.kattis.com/problems/eccentricexcursion?tab=metadata" ,"difficulty": "9.0 Hard", "description": "Eddy is planning a cross-country trip across n different cities. There are n-1 roads connecting the cities. Each road connects two cities and is bidirectional. The roads are laid out such that it is possible to travel between any two cities using only roads.\nEddy wants to plan a trip so that he visits each city exactly once. He may start or end at any city. It might not be possible to visit each city exactly once using only roads. Luckily, Eddy can take a flight between any two cities that aren’t directly connected by a road. Eddy would like to take exactly k flights during his trip.\nHelp Eddy plan his trip.\n ---INPUT--- \n The first line contains two integers n, k (0 <= k < n <= 500) where n is the number of cities Eddy is visiting and k is the number of flights Eddy would like to take.\nThe next n-1 lines each contain two integers a,b (1 <= a < b <= n) indicating that there is a road between cities a and b. It is guaranteed it is possible to travel from any city to any other city only using roads.\n ---OUTPUT--- \nOutput n integers that specify the sequence of cities that Eddy shall visit in order. The sequence must visit each city exactly once and use exactly k flights. If there are multiple possible itineraries, output the lexicographically smallest sequence. If there is no possible itinerary, output -1.\n ---Examples--- \n\n Sample Input 1: \n4 1\n1 2\n1 3\n1 4\n\n Sample Output 1: \n2 1 3 4\n\n Sample Input 2: \n4 0\n1 2\n1 3\n1 4\n\n Sample Output 2: \n-1" },
{"problem_name": "Div 2, Mul 2, Mul 3", "url": "https://open.kattis.com/problems/div2mul2mul3?tab=metadata" ,"difficulty": "9.1 Hard", "description": "As a third-year student at Hogwarts School of Witchcraft and Wizardry, Harry has to study arithmetic (known as Arithmancy in the wizard world). Today’s Arithmancy lesson revolves around multiplication and division. Thus, for homework, Harry needs to write down n integers a_1,a_2,...,a_n, according to the following rules:\n - a_1=1\n - If a_i is an odd integer, Harry has two choices: a_{i+1} = 2*a_i or a_{i+1} = 3*a_i\n - If a_i is an even integer, Harry has three choices: a_{i+1} = 2*a_i or a_{i+1} = 3*a_i or a_{i+1} = (a_i)/2. \nHarry finished the homework by writing down n integers in some arbitrary order. As Harry’s teacher, you want to check whether Harry did the homework correctly, i.e. whether it is possible to rearrange these n integers, so that they satisfy the homework’s requirements.\n ---INPUT--- \n The input contains multiple test cases, each test case is presented as below:\n - The first line contains an integer n (1 <= n <= 10^5).\n - The second line contains n space-separated integers x_1,x_2,...,x_n (1 <= x_i <= 10^{18})\n The input ends with a line containing a single 0, which is not a test case.\nThe sum of n in all test cases does not exceed 10^6.\n ---OUTPUT--- \nFor each test case, if it is not possible to rearrange the n integers so that the homework’s requirements are satisfied, print ‘NO’ in a single line. Otherwise, print two lines:\n -The first line contains the string ‘YES’.\n -The second line contains n space-separated integers a_1,a_2,...,a_n, satisfying the homework’s requirements. a_1,a_2,...,a_n must be a permutation of x_1,x_2,...,x_n. If there are multiple solutions, you can output any of them.\n ---Examples--- \n\n Sample Input 1: \n5\n1 2 4 4 8\n5\n1 2 4 8 8\n0\n\n Sample Output 1: \nYES\n1 2 4 8 4\nNO" },
{"problem_name": "Blacksmith Training", "url": "https://open.kattis.com/problems/blacksmithtraining?tab=metadata" ,"difficulty": "9.2 Hard", "description": "Zapray is playing the game World of Warcraft Classic. In the game he needs to train his blacksmith skill from level 0 to level 300. He will improve his blacksmith skill by crafting items described in blacksmith plans.\nBlacksmith plans are taught by trainers around the world. There are n plans available for Zapray to learn. Plan i is taught at a price of p_i gold, and has an entry level e_i and a master level m_i. Zapray can only learn the plan if his blacksmith skill level is at least e_i. After learning the plan, Zapray can craft the item described in the plan, such as a piece of armor or a weapon. He may craft as many items as he wishes using plan i, but he must pay d_i gold for the materials of each item to craft. Zapray’s blacksmith skill will level up by one after he crafts an item using any blacksmith plan. However, once Zapray’s skill level reaches the master level m_i, plan i becomes too elementary for Zapray and crafting an item using plan i can no longer increase his skill level.\nZapray wants to know the minimum amount of gold he needs to spend to train his blacksmith skill to level 300.\n ---INPUT--- \nThe input starts with a single integer n (1 <= n <= 80) on the first line. The i'th of the following n lines consists of four integers e_i, m_i, p_i, d_i (0 <= e_i < m_i <= 300, 0 <= p_i, d_i <= 10^6) that describe the i'th blacksmith plan. It is guaranteed that Zapray’s blacksmith skill can reach level 300 from level 0 with the given set of plans.\n ---OUTPUT--- \nOutput the minimum amount of gold Zapray needs to spend.\n ---Examples--- \n\n Sample Input 1: \n4\n0 100 1000 100\n100 150 2000 50\n150 250 3000 20\n150 300 1000 60\n\n Sample Output 1: \n24500" },
{"problem_name": "Magical Distances", "url": "https://open.kattis.com/problems/magicaldistances?tab=metadata" ,"difficulty": "9.3 Hard", "description": "There are n cities in the Magical Island, numbered from 1 to n. These cities are connected by m bi-directional roads such that there exists a path between every pair of cities. There may be multiple roads between two cities. Each road has a positive length.\nMagical crystals are the most important resources transported between the cities in the Magical Island. The cost of sending one magical crystal from city s to city t equals the smallest distance of any path between city s and city t. The distance of a path in the Magical Island is a bit special though: It is the bitwise OR value of all the road lengths on this path.\nIn each of the next q days, exactly one magical crystal will be transported between a pair of cities. Help the Magical Island figure out the transportation cost for each day.\n ---INPUT--- \n The first line contains two integers n, m (2 <= n <= 10^5, 1 <= m <= n + 200). Each of the next m lines contains three integers a, b, w that describe a road connecting city a and city b with length w (1 <= a, b <= n, a!=b, 1 <= w <= 10^9). In the next line, there is a single integer q (1 <= q <= 10000, the number of days to consider. The next q lines each have two integers s and t (1 <= s, t <= n, s!=t). The i'th line indicates that on day i a crystal is sent from city s to city t.\n ---OUTPUT--- \nFor each of the q days, output the cost of sending the crystal from s to t for that day.\n ---Examples--- \n\n Sample Input 1: \n4 7\n1 2 1\n1 2 3\n1 3 2\n1 4 1\n2 3 4\n2 4 4\n3 4 4\n3\n1 2\n1 3\n3 4\n\n Sample Output 1: \n1\n2\n3\n\n Sample Input 2: \n6 6\n1 2 1\n2 3 2\n3 4 3\n4 5 4\n5 6 5\n6 1 6\n3\n1 4\n2 5\n3 6\n\n Sample Output 2: \n3\n7\n7" },
{"problem_name": "Pipes", "url": "https://open.kattis.com/problems/pipes3?tab=metadata" ,"difficulty": "9.4 Hard", "description": "The construction of office buildings has become a very standardized task. Pre-fabricated modules are combined according to the customer’s needs, shipped from a faraway factory, and assembled on the construction site. However, there are still some tasks that require careful planning, one example being the routing of pipes for the heating system.\nA modern office building is made up of square modules, one on each floor being a service module from which (among other things) hot water is pumped out to the other modules through the heating pipes. Each module (including the service module) will have heating pipes connecting it to exactly two of its two to four neighboring modules. Thus, the pipes have to run in a circuit, from the service module, visiting each module exactly once, before finally returning to the service module. Due to different properties of the modules, having pipes connecting a pair of adjacent modules comes at different costs. For example, some modules are separated by thick walls, increasing the cost of laying pipes. Your task is to, given a description of a floor of an office building, decide the cheapest way to route the heating pipes.\n ---INPUT--- \n The first line of input contains a single integer n, stating the number of floors to handle. Then follow n floor descriptions, each beginning on a new line with two integers, 2 <= r <= 10 and 2 <= c <= 10, defining the size of the floor – r x c  modules. Beginning on the next line follows a floor description in ASCII format, in total 2r+1 rows, each with 2c+2 characters (count includes the final newline). All floors are perfectly rectangular, and will always have an even number of modules. All interior walls are represented by numeric characters, ‘0’ to ‘9’, indicating the cost of routing pipes through the wall (see sample input).\n ---OUTPUT--- \nFor each test case, output a single line with the cost of the cheapest route.\n ---Examples--- \n\n Sample Input 1: \n3\n4 3\n#######\n# 2 3 #\n#1#9#1#\n# 2 3 #\n#1#7#1#\n# 5 3 #\n#1#9#1#\n# 2 3 #\n#######\n4 4\n#########\n# 2 3 3 #\n#1#9#1#4#\n# 2 3 6 #\n#1#7#1#5#\n# 5 3 1 #\n#1#9#1#7#\n# 2 3 0 #\n#########\n2 2\n#####\n# 1 #\n#2#3#\n# 4 #\n#####\n\n Sample Output 1: \n28\n45\n10" },
{"problem_name": "Special Cycle", "url": "https://open.kattis.com/problems/specialcycle?tab=metadata" ,"difficulty": "9.5 Hard", "description": "You are given a simple undirected graph with no self-loops or multiple edges. Some of the edges are marked as Special.\nYour task is to find a simple cycle where, for each Special edge, that edge either belongs to the cycle or neither of its endpoints touch the cycle. The cycle is not allowed to repeat vertices. Output any solution, or report that none exist.\n ---INPUT--- \n The first line of input contains three integers n (2 <= n <= 150), m (1 <= m <= (n*(n-1))/2) and k (1 <= k <= m), where n is the number of nodes in the graph, m is the number of edges, and k is the number of edges that are Special. The nodes are numbered 1 through n.\nEach of the next m lines contains two integers a and b (1 <= a < b <= n), denoting an undirected edge between nodes a and b. All edges are distinct. The first k edges are the Special edges.\n ---OUTPUT--- \nOutput an integer denoting the length of the found cycle on one line. On subsequent lines, output the vertices of the cycle in order around the cycle, one per line. If no such cycle exists, simply output -1.\n ---Examples--- \n\n Sample Input 1: \n8 10 3\n1 2\n4 5\n7 8\n2 3\n3 4\n1 4\n5 6\n6 7\n5 8\n3 8\n\n Sample Output 1: \n8\n1\n4\n5\n6\n7\n8\n3\n2\n\n Sample Input 2: \n4 6 3\n1 2\n1 3\n1 4\n2 3\n3 4\n2 4\n\n Sample Output 2: \n-1" },
{"problem_name": "Barking Up The Wrong Tree", "url": "https://open.kattis.com/problems/barktree?tab=metadata" ,"difficulty": "9.6 Hard", "description": "Your dog Spot is let loose in the park. Well, relatively loose – he is tied to a post with a leash, limiting his movements. Spread around the park are various squeaky toys and other dog paraphernalia, which Spot happily goes after when he sees them. When he gets to a toy he will chew at it for a while until it has become defunct, at which point he will go after the next toy, which looks much squeakier.\nThis is all very well, but there are obstacles to Spot’s joyful canine play: trees. In the park there are several trees, and if Spot walks around a tree his leash gets wrapped around the tree, making his movements more limited. Being a dog, with pressing squeaky matters to attend to, Spot does not really have time to take things such as trees into account, and always goes directly in a straight line for his next toy. If he can’t get to his next toy because he has run out of leash, Spot will start barking uncontrollably (as no doubt any of us would) and you have to help him. How long would Spot’s leash have to be in order for him to run out of toys before he runs out of leash?\nFor practical purposes, you may assume that (when seen from above) Spot, his toys, and the trees are points, and that the post that the leash is tied to will not hinder Spot’s movements in any way. After having finished chewing a toy, Spot always goes for the most shiny unchewed toy. The post to which Spot’s leash is tied is located at coordinates (0,0), and this is also where Spot is initially located.\n ---INPUT--- \n The first line of input consists of two integers n and m, where 1 <= n <= 50 is the number of toys in the park and 0 <= m <= 50 is the number of trees in the park. Then follow n lines, each containing two integers x, y giving the coordinates of a toy. The toys are listed in decreasing order of shininess. This is followed by m lines, each containing two integers x, y, indicating that there is a tree at those coordinates.\nEach coordinate is bounded by 10000 in absolute value. The toys, the trees and the post are all in different positions, and Spot’s route will never take him within distance 0.001 of any tree.\n ---OUTPUT--- \nWrite a single line containing the length needed for the leash in order for Spot to be able to get to all his toys, rounded to two decimal digits.\n ---Examples--- \n\n Sample Input 1: \n2 0\n10 0\n10 10\n\n Sample Output 1: \n14.14\n\n Sample Input 2: \n2 1\n10 0\n10 10\n9 1\n\n Sample Output 2: \n18.11" },
{"problem_name": "The Wire Ghost", "url": "https://open.kattis.com/problems/thewireghost?tab=metadata" ,"difficulty": "9.6 Hard", "description": "Žofka is bending a copper wire. She starts with a straight wire placed on the table with the starting point glued to the middle of the table. She then repeatedly picks a point on the wire and bends the part starting at that point (away from the starting point) by 90 degrees (either clockwise or counterclockwise). Throughout the process the starting point stays glued to the middle of the table.\nThe most important consideration is that she does not want the wire to touch itself as she bends it (that would summon the wire ghost). She needs your help. She has a list of points together with the direction at each point (clockwise or counterclockwise). She wants to know if bending the wire at the listed points in the given order would cause the wire ghost to appear at any time during the process.\n ---INPUT--- \n The first line contains two integers L and n where L is the length of the wire and n is the number of points. Each of the next n lines contains a number from {0,...,L} (describing the point on the wire) followed by W (clockwise) or C (counter clockwise). You may assume L <= 100000000 and n <= 1000.\n ---OUTPUT--- \nThe output consists of a single line consisting of the string GHOST if the wire would touch itself during the bending, and the string SAFE otherwise.\n ---Examples--- \n\n Sample Input 1: \n4 3\n3 C\n2 C\n1 C\n\n Sample Output 1: \nGHOST\n\n Sample Input 2: \n3 3\n1 C\n2 C\n3 C\n\n Sample Output 2: \nSAFE" }
] 

}






